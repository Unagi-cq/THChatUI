{"version":3,"file":"js/813.4a0a74ad.js","mappings":"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","sources":["webpack://THChatUI/./src/api/Google_AI/index.js","webpack://THChatUI/../../src/parse.ts","webpack://THChatUI/../../src/fetch.ts"],"sourcesContent":["/**\n * @fileoverview Google AI平台的HTTP调用。\n */\nimport { fetchEventSource } from \"@microsoft/fetch-event-source\";\nimport store from '../../store';\n\nconst API_URLS = {\n    llm: \"/google/remote/v1beta/openai/chat/completions\",\n    vim: \"/google/remote/v1beta/openai/chat/completions\",\n    igm: \"\" // 预留绘图模型\n};\n\n/**\n * 调用Google AI平台的接口\n * @param {string} prompt - 用户输入的问题\n * @param {Array} history - 历史对话消息\n * @param {Array} files - 文件列表 图片\n * @param {AbortController} controller - 控制请求的取消\n * @param {Function} onopen - 连接成功回调\n * @param {Function} onmessage - 接收消息回调\n * @param {Function} onclose - 连接关闭回调\n * @param {Function} onerror - 错误处理回调\n */\nexport async function fetchAPI({\n    prompt,\n    history,\n    files,\n    controller,\n    onopen,\n    onmessage,\n    onclose,\n    onerror\n}) {\n    const { setting } = store.state;\n    const { model_config, web_search_enabled } = setting;\n    const { version, type, can_web_search } = model_config;\n    const api_key = setting.model_list[setting.platform].api_key_config.api_key;\n\n    const url = API_URLS[type] || API_URLS.llm;\n    const is_search = (can_web_search !== undefined && can_web_search) && web_search_enabled;\n\n    const requestConfig = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${api_key}`,\n            'Content-Type': 'application/json',\n            'Accept': 'text/event-stream'\n        },\n        body: JSON.stringify(preProcess(version, prompt, history, type, files, is_search)),\n        signal: controller.signal,\n        onopen,\n        onmessage,\n        onclose,\n        onerror,\n        openWhenHidden: true\n    };\n\n    return await fetchEventSource(url, requestConfig);\n}\n\n/**\n * 构建请求体\n * @param {string} model_version - 模型版本标识\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {string} type - 模型类型标识\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n * @param {boolean} is_search - 是否启用网络搜索功能\n */\nfunction preProcess(model_version, prompt, history, type, files, is_search) {\n    let body = {};\n    switch (type) {\n        // 文本输入格式\n        case \"llm\":\n            body = {\n                model: model_version,\n                messages: buildLLMMessage(prompt, history),\n                reasoning_effort: \"low\",\n                stream: true\n            }\n            break;\n        // 图片输入格式\n        case \"vim\":\n            body = {\n                model: model_version,\n                messages: buildVIMMessage(prompt, history, files),\n                reasoning_effort: \"low\",\n                stream: true\n            }\n            break;\n    }\n    return body;\n}\n\n/**\n * 构建LLM文本对话消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n */\nfunction buildLLMMessage(prompt, history) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.query\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": chat.answer\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history)\n    arr.push({\n        \"role\": \"user\",\n        \"content\": prompt\n    })\n    return arr;\n}\n\n\n/**\n * 构建多模态消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n */\nfunction buildVIMMessage(prompt, history, files) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.files && chat.files[0] && chat.files[0].base64 ? \n                    [{ \"type\": \"image_url\", \"image_url\": { \"url\": chat.files[0].base64 } }, { \"text\": chat.query }] :\n                    [{ \"text\": chat.query }]\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": [{ \"text\": chat.answer }]\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history);\n    let content = [];\n\n    if (files && files.length > 0 && files[0].base64) {\n        content.push({\n            \"type\": \"image_url\",\n            \"image_url\": {\n                \"url\": files[0].base64\n            }\n        });\n    }\n\n    content.push({\n        \"type\": \"text\",\n        \"text\": prompt\n    });\n\n    arr.push({\n        \"role\": \"user\",\n        \"content\": content\n    });\n\n    return arr;\n}\n\nexport function postProcess(event) {\n    if (event.data === '[DONE]') {\n        return { content: '' };\n    }\n\n    const data = JSON.parse(event.data).choices[0];\n\n    if (data.finish_reason === \"stop\") {\n        return { content: '' };\n    }\n\n    if (data.delta.reasoning_content) {\n        return { reasoning_content: data.delta.reasoning_content };\n    } else {\n        return { content: data.delta.content };\n    }\n}\n"],"names":["API_URLS","llm","vim","igm","async","fetchAPI","prompt","history","files","controller","onopen","onmessage","onclose","onerror","setting","store","state","model_config","web_search_enabled","version","type","can_web_search","api_key","model_list","platform","api_key_config","url","is_search","undefined","requestConfig","method","headers","body","JSON","stringify","preProcess","signal","openWhenHidden","fetchEventSource","model_version","model","messages","buildLLMMessage","reasoning_effort","stream","buildVIMMessage","getHistory","array","i","length","chat","push","query","answer","arr","base64","content","postProcess","event","data","parse","choices","finish_reason","delta","reasoning_content","getBytes","onChunk","reader","getReader","result","read","done","value","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","concat","bufLength","lineStart","lineEnd","subarray","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","TextDecoder","line","field","decode","valueOffset","id","retry","parseInt","isNaN","a","b","res","Uint8Array","set","EventStreamContentType","DefaultRetryInterval","LastEventId","input","_a","inputSignal","inputHeaders","inputOnOpen","fetch","inputFetch","rest","__rest","Promise","resolve","reject","Object","assign","curRequestController","onVisibilityChange","abort","document","hidden","create","accept","addEventListener","retryInterval","retryTimer","dispose","removeEventListener","window","clearTimeout","defaultOnOpen","AbortController","response","err","aborted","interval","setTimeout","innerErr","contentType","get","startsWith","Error"],"sourceRoot":""}