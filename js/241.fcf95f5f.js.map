{"version":3,"file":"js/241.fcf95f5f.js","mappings":"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","sources":["webpack://THChatUI/./src/views/kb/index.vue","webpack://THChatUI/./src/schema/kbStoreHelper.js","webpack://THChatUI/./src/views/kb/index.vue?440f"],"sourcesContent":["<template>\n    <div class=\"kb-container standard-page-container\">\n        <div class=\"kb-header standard-page-header\">\n            <h4>知识库</h4>\n            <div class=\"kb-stats standard-page-stats\">\n                <span>总文件数: {{ totalFiles }}</span>\n                <span>总分段数: {{ totalChunks }}</span>\n            </div>\n        </div>\n\n        <!-- 知识库列表 -->\n        <el-row :gutter=\"24\" justify=\"center\" style=\"margin-left: 0;margin-right: 0;\">\n            <el-col :md=\"24\" :sm=\"24\" :xs=\"24\">\n                <!-- 知识库卡片列表 -->\n                <el-row :gutter=\"24\">\n                    <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"6\">\n                        <div class=\"kb-card create-kb-card\" @click=\"createRepoDialogVisible = true\">\n                            <div class=\"create-kb-content\">\n                                <el-icon :size=\"40\">\n                                    <Plus />\n                                </el-icon>\n                                <span class=\"create-text\">创建知识库</span>\n                            </div>\n                        </div>\n                    </el-col>\n                    <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"6\" v-for=\"repo in repos\" :key=\"repo.repoId\">\n                        <div class=\"kb-card\">\n                            <div class=\"kb-card-header\">\n                                <div class=\"kb-card-title-row\">\n                                    <span class=\"kb-card-title\">{{ repo.name }}</span>\n                                    <div class=\"kb-card-actions\">\n                                        <el-tooltip content=\"管理\" placement=\"top\">\n                                            <SvgIcon icon-class=\"settings\" style=\"width: 16px; height: 16px;\"\n                                                @click=\"openRepo(repo)\" class=\"action-icon settings\" />\n                                        </el-tooltip>\n\n                                        <el-tooltip content=\"删除\" placement=\"top\">\n                                            <SvgIcon icon-class=\"trash\" style=\"width: 16px; height: 16px;\"\n                                                @click=\"deleteRepo(repo.repoId)\" class=\"action-icon delete\" />\n                                        </el-tooltip>\n                                    </div>\n                                </div>\n                            </div>\n                            <p class=\"kb-card-description\">{{ repo.description }}</p>\n                            <div class=\"kb-card-footer\">\n                                <span class=\"create-time\">创建时间: {{ repo.createTime }}</span>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n            </el-col>\n        </el-row>\n\n        <!-- 自定义弹窗 -->\n        <CustomDialog v-model=\"createRepoDialogVisible\" title=\"知识库详情\">\n            <el-form :model=\"newKbForm\" label-width=\"100px\" :rules=\"rules\" ref=\"newKbForm\">\n                <el-form-item label=\"知识库名称\" prop=\"name\">\n                    <el-input v-model=\"newKbForm.name\" maxlength=\"10\" show-word-limit />\n                </el-form-item>\n                <el-form-item label=\"知识库描述\" prop=\"description\">\n                    <el-input type=\"textarea\" v-model=\"newKbForm.description\" />\n                </el-form-item>\n            </el-form>\n            <div style=\"text-align: right; margin-top: 20px;\">\n                <el-button type=\"primary\" @click=\"createRepo\">确定</el-button>\n                <el-button @click=\"createRepoDialogVisible = false\">取消</el-button>\n            </div>\n        </CustomDialog>\n\n        <!-- 知识库的文件列表弹窗 -->\n        <CustomDialog v-model=\"repoDialogVisible\" :title=\"`${activeRepo?.name || ''} - 文件列表`\">\n            <div class=\"file-container\">\n                <!-- 文件展示部分 -->\n                <div class=\"file-card\" v-for=\"x in files\">\n                    <img src=\"@/assets/images/file.svg\" alt=\"File Icon\" class=\"file-icon\" />\n                    <div class=\"file-details\">\n                        <div class=\"file-title\">\n                            {{ x.name }}\n                            <el-button type=\"text\" @click=\"toggleChunks(x)\">\n                                {{ x.showChunks ? '收起分段' : '查看分段' }}\n                            </el-button>\n                            <button class=\"delete-btn\" @click=\"delFile(x.fileId)\">&#x2715;</button>\n                        </div>\n                        <div class=\"file-info\">\n                            <span class=\"upload-time\">上传时间: {{ x.createTime }}</span>\n                            <span class=\"file-size\">文件大小: {{ formatFileSize(x.size) }}</span>\n                        </div>\n                        <!-- chunks预览部分 -->\n                        <div v-if=\"x.showChunks\" class=\"chunks-preview\">\n                            <div class=\"chunks-grid\">\n                                <div v-for=\"(chunk, index) in x.list\" :key=\"index\" class=\"chunk-square\"\n                                    @click=\"toggleChunkContent(x.fileId, index)\"\n                                    :class=\"{ 'expanded': isChunkExpanded(x.fileId, index) }\">\n                                    <div class=\"chunk-square-content\">\n                                        <template v-if=\"!isChunkExpanded(x.fileId, index)\">\n                                            <div class=\"chunk-number\">{{ index + 1 }}</div>\n                                        </template>\n                                        <template v-else>\n                                            <div class=\"chunk-expanded-header\">\n                                                <span>分段 {{ index + 1 }}</span>\n                                                <span class=\"chunk-length\">{{ chunk.content.length }} 字符</span>\n                                            </div>\n                                            <div class=\"chunk-expanded-content\">\n                                                <el-scrollbar height=\"200px\">\n                                                    {{ chunk.content }}\n                                                </el-scrollbar>\n                                            </div>\n                                        </template>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- 文件上传部分 -->\n                <div class=\"upload-card\">\n                    <el-upload class=\"upload-button\" drag :auto-upload=\"true\" :http-request=\"handleLocalUpload\" multiple\n                        :before-upload=\"beforeUpload\" :show-file-list=\"false\" accept=\".pdf,.doc,.docx,.txt\">\n                        <template v-if=\"!isUploading\">\n                            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n                            <div class=\"el-upload__text\">\n                                将文件拖拽至此处 或 点击上传\n                            </div>\n                        </template>\n                        <template v-else>\n                            <el-progress type=\"circle\" :percentage=\"uploadProgress\"\n                                :status=\"uploadProgress === 100 ? 'success' : ''\" />\n                            <div class=\"upload-progress-text\">{{ uploadStatusText }}</div>\n                        </template>\n                        <template #tip>\n                            <div class=\"el-upload__tip\">\n                                目前仅支持5MB以内的PDF/DOC/DOCX/TXT文件上传，请确保文件格式正确\n                            </div>\n                        </template>\n                    </el-upload>\n                </div>\n            </div>\n        </CustomDialog>\n\n    </div>\n</template>\n\n<script>\nimport { Repository, File, Chunk } from '@/schema/kb';\nimport kbStoreHelper from '@/schema/kbStoreHelper';\nimport { Segment, useDefault } from 'segmentit';\n\nconst segmentit = useDefault(new Segment());\n\nexport default {\n    name: \"Kb\",\n    data() {\n        return {\n            // 当前选中的知识库\n            activeRepo: null,\n            // 创建知识库弹窗是否显示\n            createRepoDialogVisible: false,\n            // 创建知识库表单\n            newKbForm: {\n                // 知识库名称\n                name: '',\n                // 知识库描述\n                description: ''\n            },\n            // 创建知识库表单校验规则\n            rules: {\n                name: [\n                    { required: true, message: \"请输入知识库名称\", trigger: 'blur' }\n                ],\n                description: [\n                    { required: true, message: \"请输入知识库描述\", trigger: 'blur' }\n                ]\n            },\n            // 知识库详情弹窗是否显示\n            repoDialogVisible: false,\n            uploadProgress: 0, // 上传进度状态\n            isUploading: false, // 上传状态标志\n            uploadStatusText: '',\n            progressTimer: null, // 计时器变量\n            fileChunksVisibility: {}, // 用于存储每个文件的 chunks 显示状态\n            expandedChunks: {}, // 存储展开状态的chunks\n        }\n    },\n    computed: {\n        // 所有知识库列表\n        repos() {\n            return this.$store.state.app.kb.list;\n        },\n        // 当前选中知识库的文件列表,如果没有选中知识库则返回空数组\n        files() {\n            return this.activeRepo?.list || [];\n        },\n        // chunkSize\n        chunkSize() {\n            return this.$store.state.setting.chunk_size;\n        },\n        // 总文件数\n        totalFiles() {\n            return this.$store.state.app.kb.statistics.totalFiles;\n        },\n        // 总分段数\n        totalChunks() {\n            return this.$store.state.app.kb.statistics.totalChunks;\n        }\n    },\n    created() {\n\n    },\n    methods: {\n        /**\n         * 创建知识库\n         */\n        createRepo() {\n            this.$refs.newKbForm.validate((valid) => {\n                if (valid) {\n                    const newRepo = new Repository(\n                        Date.now(),\n                        this.newKbForm.name,\n                        new Date().toLocaleString(),\n                        this.newKbForm.description,\n                        []\n                    );\n                    kbStoreHelper.addRepo(newRepo);\n                    this.createRepoDialogVisible = false;\n                    this.newKbForm = { name: '', description: '' };\n                    this.$refs.newKbForm.resetFields();\n                }\n            });\n        },\n\n        /**\n         * 打开知识库详情页面弹窗\n         * @param {Repository} repo 要打开的知识库对象\n         */\n        openRepo(repo) {\n            this.activeRepo = repo;\n            this.repoDialogVisible = true;\n        },\n\n        /**\n         * 删除知识库\n         * @param {Number} repoId 要删除的知识库ID\n         */\n        deleteRepo(repoId) {\n            this.$confirm(\"确认要删除吗？\", \"警告\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: 'warning'\n            }).then(() => {\n                kbStoreHelper.delRepo(repoId);\n                this.$notify({\n                    title: \"成功\",\n                    message: \"删除成功\",\n                    type: 'success'\n                });\n            }).catch(() => { });\n        },\n\n        /**\n         * 上传文件前校验文件大小\n         * @param {File} file 待上传的文件对象\n         * @returns {boolean} 是否允许上传\n         */\n        beforeUpload(file) {\n            const maxSize = this.$store.state.setting.kb_file_size * 1024 * 1024;\n            if (file.size > maxSize) {\n                this.$notify({\n                    title: \"错误\",\n                    message: \"失败\",\n                    type: 'error'\n                });\n                return false; // 阻止上传\n            }\n            return true; // 允许上传\n        },\n\n        /**\n         * 处理本地文件上传\n         * @param {Object} options 上传选项对象\n         */\n        async handleLocalUpload(options) {\n            const file = options.file;\n\n            // 重置上传状态\n            this.isUploading = true;\n            this.uploadProgress = 0;\n            this.uploadStatusText = '准备上传...';\n\n            try {\n                // 模拟文件读取进度，使用衰减增长\n                const simulateProgress = setInterval(() => {\n                    if (this.uploadProgress < 90) {\n                        // 计算剩余进度空间\n                        const remainingProgress = 90 - this.uploadProgress;\n                        // 使用衰减因子，随着进度增加而减少增量\n                        const increment = Math.max(1, Math.floor(remainingProgress * 0.2));\n                        this.uploadProgress += increment;\n                        this.uploadStatusText = '正在处理文件...';\n                    }\n                }, 1000);\n\n                // 读取文件内容\n                const content = await this.readFileContent(file);\n\n                // 检查内容是否为空\n                if (!content || content.trim() === '') {\n                    this.$notify({\n                        title: \"警告\",\n                        message: \"未识别到文件内容\",\n                        type: 'warning'\n                    });\n                    this.isUploading = false;\n                    this.uploadProgress = 0;\n                    this.uploadStatusText = '';\n                    return;\n                }\n\n                // 将内容分割成chunks\n                const chunks = this.splitContentIntoChunks(content, this.chunkSize);\n\n                // 清除进度模拟\n                clearInterval(simulateProgress);\n\n                // 创建文件对象\n                const fileData = new File(\n                    Date.now(),\n                    file.name,\n                    new Date().toLocaleString(),\n                    file.name.split('.').pop().toLowerCase(),\n                    '',\n                    file.size,\n                    chunks.map(chunk => new Chunk(Date.now(), chunk, segmentit.doSegment(chunk.toLowerCase()).map(word => word.w))) // 添加chunks并分词\n                );\n\n                // 添加文件到知识库\n                kbStoreHelper.addFile(this.activeRepo.repoId, fileData);\n\n                // 完成上传\n                this.uploadProgress = 100;\n                this.uploadStatusText = '上传完成！';\n\n                // 显示成功通知\n                this.$notify({\n                    title: \"成功\",\n                    message: '上传完成！',\n                    type: 'success'\n                });\n\n                // 重置状态\n                setTimeout(() => {\n                    this.isUploading = false;\n                    this.uploadProgress = 0;\n                    this.uploadStatusText = '';\n                }, 1500);\n\n            } catch (error) {\n                console.error('文件上传失败:', error);\n                this.uploadStatusText = '上传失败';\n\n                this.$notify({\n                    title: \"错误\",\n                    message: \"上传失败\",\n                    type: 'error'\n                });\n\n                // 重置状态\n                setTimeout(() => {\n                    this.isUploading = false;\n                    this.uploadProgress = 0;\n                    this.uploadStatusText = '';\n                }, 1500);\n            }\n        },\n\n        /**\n         * 读取文件内容 分流处理\n         * @param {File} file 文件对象\n         */\n        async readFileContent(file) {\n            const fileType = file.name.split('.').pop().toLowerCase();\n\n            switch (fileType) {\n                case 'pdf':\n                    return await this.readPdfContent(file);\n                case 'doc':\n                case 'docx':\n                    return await this.readDocContent(file);\n                case 'txt':\n                    return await this.readTxtContent(file);\n                default:\n                    throw new Error('不支持的文件格式');\n            }\n        },\n\n        /**\n         * 读取txt文本文件内容\n         * @param {File} file 文件对象\n         */\n        readTxtContent(file) {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onload = (e) => resolve(e.target.result);\n                reader.onerror = (e) => reject(e);\n                reader.readAsText(file, 'UTF-8');\n            });\n        },\n\n        /**\n         * 读取pdf文件内容\n         * @param {File} file 文件对象\n         */\n        async readPdfContent(file) {\n            return new Promise((resolve, reject) => {\n                const fileReader = new FileReader();\n\n                fileReader.onload = async (event) => {\n                    try {\n                        const pdfData = new Uint8Array(event.target.result);\n                        const pdf = await import('pdfjs-dist');\n                        pdf.GlobalWorkerOptions.workerSrc = '/pdfjs-dist@5.2.133/pdf.worker.min.mjs';\n\n                        const loadingTask = pdf.getDocument(pdfData);\n                        const pdfDoc = await loadingTask.promise;\n\n                        let fullText = '';\n                        for (let i = 1; i <= pdfDoc.numPages; i++) {\n                            const page = await pdfDoc.getPage(i);\n                            const textContent = await page.getTextContent();\n                            const pageText = textContent.items.map(item => item.str).join(' ');\n                            fullText += pageText + '\\n';\n                        }\n\n                        resolve(fullText);\n                    } catch (error) {\n                        reject(error);\n                    }\n                };\n                fileReader.onerror = reject;\n                fileReader.readAsArrayBuffer(file);\n            });\n        },\n\n        /**\n         * 读取doc/docx文件内容\n         * @param {File} file 文件对象\n         */\n        async readDocContent(file) {\n            const mammoth = await import('mammoth');\n            const arrayBuffer = await file.arrayBuffer();\n            const result = await mammoth.extractRawText({ arrayBuffer });\n            return result.value;\n        },\n\n        /**\n         * 删除文件\n         * @param {string} fileId 文件ID\n         */\n        async delFile(fileId) {\n            try {\n                await this.$confirm(\n                    \"确认删除该文件?\",\n                    \"警告\",\n                    {\n                        confirmButtonText: \"确定\",\n                        cancelButtonText: \"取消\",\n                        type: 'warning'\n                    }\n                );\n\n                kbStoreHelper.delFile(this.activeRepo.repoId, fileId);\n\n                this.$notify({\n                    title: \"成功\",\n                    message: '文件删除成功',\n                    type: 'success'\n                });\n            } catch (error) {\n                if (error !== 'cancel') {\n                    console.error('文件删除失败:', error);\n                    this.$notify({\n                        title: \"错误\",\n                        message: '文件删除失败',\n                        type: 'error'\n                    });\n                }\n            }\n        },\n\n        /**\n         * 格式化文件大小\n         * @param {number} bytes 文件大小(字节)\n         * @returns {string} 格式化后的文件大小\n         */\n        formatFileSize(bytes) {\n            if (!bytes) return '0 B';\n            const k = 1024;\n            const sizes = ['B', 'KB', 'MB', 'GB'];\n            const i = Math.floor(Math.log(bytes) / Math.log(k));\n            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n        },\n\n        // 添加新方法用于分割内容\n        splitContentIntoChunks(content, chunkSize) {\n            const chunks = [];\n            let currentChunk = '';\n            const sentences = content.split(/[。！？.!?]/); // 按句子分割\n\n            for (const sentence of sentences) {\n                if ((currentChunk + sentence).length > chunkSize) {\n                    if (currentChunk) {\n                        chunks.push(currentChunk.trim());\n                    }\n                    currentChunk = sentence;\n                } else {\n                    currentChunk += sentence;\n                }\n            }\n\n            if (currentChunk) {\n                chunks.push(currentChunk.trim());\n            }\n\n            return chunks;\n        },\n\n        /**\n         * 切换显示/隐藏文件的chunks\n         * @param {File} file 文件对象\n         */\n        toggleChunks(file) {\n            file.showChunks = !file.showChunks;\n        },\n\n        /**\n         * 切换chunk内容的显示状态\n         * @param {string} fileId 文件ID\n         * @param {number} index 分段索引\n         */\n        toggleChunkContent(fileId, index) {\n            const key = `${fileId}-${index}`;\n            this.expandedChunks[key] = !this.expandedChunks[key];\n        },\n\n        /**\n         * 判断chunk是否展开\n         * @param {string} fileId 文件ID\n         * @param {number} chunkIndex chunk索引\n         * @returns {boolean} 是否展开\n         */\n        isChunkExpanded(fileId, chunkIndex) {\n            const key = `${fileId}-${chunkIndex}`;\n            return this.expandedChunks[key];\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n/**\n * 知识库容器\n */\n.kb-container {\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    animation: slideIn 0.3s ease-in-out;\n}\n\n/**\n * 表单Label颜色\n */\n:deep(.el-form-item__label) {\n    color: var(--common-color);\n}\n\n/**\n * 知识库卡片\n */\n.kb-card {\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    border-radius: 8px;\n    margin-bottom: 20px;\n    height: 130px;\n    justify-content: space-between;\n    background-color: var(--standard-page-bg-color);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    position: relative;\n    overflow: hidden;\n\n    &:hover {\n        transform: translateY(-5px);\n\n        &::after {\n            transform: scaleX(1);\n        }\n    }\n\n    /* 卡片内部头部 */\n    >.kb-card-header {\n        margin-bottom: 15px;\n\n        /* 卡片标题行,包含标题和操作按钮 */\n        >.kb-card-title-row {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            >.kb-card-title {\n                font-weight: 600;\n                font-size: 18px;\n                color: var(--page-mcp-header-text);\n            }\n\n            /* 卡片操作按钮容器 */\n            >.kb-card-actions {\n                display: flex;\n                gap: 16px;\n\n                .action-icon {\n                    cursor: pointer;\n                    padding: 8px;\n                    opacity: 0.7;\n                    transition: all 0.2s;\n                    border-radius: 4px;\n\n                    &:hover {\n                        opacity: 1;\n                        background-color: var(--page-mcp-server-hover-bg);\n                        transform: scale(1.1);\n                    }\n\n                    &.delete:hover {\n                        color: #F56C6C;\n                    }\n                }\n            }\n        }\n    }\n\n    /* 卡片描述文本 */\n    .kb-card-description {\n        font-size: 14px;\n        line-height: 1.5;\n        color: var(--page-mcp-text-color);\n        margin-bottom: 10px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        line-clamp: 2;\n        -webkit-box-orient: vertical;\n    }\n\n    /* 卡片底部信息 */\n    .kb-card-footer {\n        font-size: 12px;\n        color: var(--answer-stats-color);\n        margin-top: auto;\n\n        /* 创建时间 */\n        >.create-time {\n            font-style: italic;\n            display: flex;\n            align-items: center;\n        }\n    }\n}\n\n/**\n * 创建知识库卡片\n */\n.create-kb-card {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: 2px dashed var(--page-mcp-sidebar-border);\n    background: transparent !important;\n    box-shadow: none !important;\n\n    &:hover {\n        border-color: var(--el-color-primary);\n        background: transparent;\n        transform: translateY(-5px);\n    }\n\n    >.create-kb-content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        color: var(--page-mcp-text-color);\n        opacity: 0.7;\n        transition: all 0.3s;\n\n        >.create-text {\n            margin-top: 12px;\n            font-size: 16px;\n            font-weight: 500;\n        }\n    }\n}\n\n.file-container {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: 5px;\n    border-radius: 8px;\n    margin: 5px 0;\n    animation: slideIn 0.4s ease-out;\n}\n\n@keyframes slideIn {\n    from {\n        opacity: 0;\n        transform: translateX(20px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n/* 卡片样式 */\n.file-card {\n    display: flex;\n    padding: 16px;\n    border-radius: 8px;\n    background-color: var(--page-mcp-sidebar-bg);\n    box-shadow: 0 2px 8px 0 var(--page-mcp-sidebar-shadow);\n    transition: all 0.3s ease;\n\n    /* 文件图标样式 */\n    >.file-icon {\n        width: 40px;\n        height: 40px;\n        object-fit: cover;\n        margin-right: 16px;\n        border-radius: 5px;\n    }\n\n    /* 文件详情样式 */\n    >.file-details {\n        flex: 1;\n\n        >.file-title {\n            font-weight: 600;\n            display: flex;\n            align-items: center;\n            gap: 16px;\n            color: var(--page-mcp-header-text);\n            font-size: 16px;\n\n            .el-button {\n                font-size: 14px;\n                padding: 8px;\n            }\n\n            .delete-btn {\n                background: none;\n                border: none;\n                color: #909399;\n                cursor: pointer;\n                font-size: 18px;\n                padding: 6px;\n                margin-left: auto;\n                border-radius: 4px;\n                transition: all 0.2s;\n\n                &:hover {\n                    color: #F56C6C;\n                    background-color: rgba(245, 108, 108, 0.1);\n                }\n            }\n        }\n\n        >.file-info {\n            display: flex;\n            gap: 20px;\n            color: var(--answer-stats-color);\n            font-size: 12px;\n            margin-bottom: 10px;\n\n            .upload-time,\n            .file-size {\n                white-space: nowrap;\n            }\n        }\n    }\n}\n\n.upload-card {\n    padding: 24px;\n    border-radius: 8px;\n    background-color: var(--page-mcp-sidebar-bg);\n    box-shadow: 0 2px 8px 0 var(--page-mcp-sidebar-shadow);\n    transition: all 0.3s ease;\n}\n\n:deep(.el-upload-dragger) {\n    width: 100%;\n    height: 180px;\n    padding: 20px;\n    background: none;\n    border: 2px dashed var(--page-mcp-sidebar-border);\n    transition: all 0.3s;\n\n    &:hover {\n        border-color: var(--el-color-primary);\n        transform: translateY(-5px);\n    }\n\n    .el-icon--upload {\n        font-size: 48px;\n        color: var(--el-color-primary);\n        margin-bottom: 16px;\n    }\n\n    .el-upload__text {\n        font-size: 16px;\n        color: var(--page-mcp-text-color);\n    }\n}\n\n.el-upload__tip {\n    text-align: center;\n    margin-top: 12px;\n    color: var(--answer-stats-color);\n}\n\n.upload-progress-text {\n    margin-top: 16px;\n    color: var(--page-mcp-text-color);\n    text-align: center;\n    font-size: 14px;\n}\n\n:deep(.el-progress) {\n    margin: 20px auto;\n}\n\n.chunks-preview {\n    margin-top: 20px;\n\n    .chunks-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));\n        gap: 12px;\n    }\n\n    .chunk-square {\n        aspect-ratio: 1;\n        border-radius: 8px;\n        cursor: pointer;\n        border: 1px solid var(--page-mcp-sidebar-border);\n        background-color: var(--standard-page-bg-color);\n        color: var(--page-mcp-text-color);\n        position: relative;\n        overflow: hidden;\n\n        &:hover {\n            border-color: var(--el-color-primary);\n        }\n\n        &.expanded {\n            aspect-ratio: auto;\n            grid-column: 1 / -1;\n            height: auto;\n            min-height: 250px;\n            border-width: 2px;\n            border-color: var(--el-color-primary);\n        }\n\n        .chunk-square-content {\n            padding: 12px;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n            height: 100%;\n        }\n\n        .chunk-number {\n            text-align: center;\n            font-size: 18px;\n            font-weight: 600;\n            color: var(--page-mcp-header-text);\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n\n        .chunk-expanded-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 16px;\n            padding-bottom: 12px;\n            border-bottom: 1px solid var(--page-mcp-sidebar-border);\n\n            span:first-child {\n                font-weight: 600;\n                font-size: 16px;\n                color: var(--page-mcp-header-text);\n            }\n        }\n\n        .chunk-length {\n            color: var(--answer-stats-color);\n            font-size: 12px;\n            padding: 4px 8px;\n            background-color: rgba(var(--el-color-primary-rgb), 0.1);\n            border-radius: 12px;\n        }\n\n        .chunk-expanded-content {\n            flex: 1;\n            line-height: 1.6;\n            color: var(--page-mcp-text-color);\n            white-space: pre-wrap;\n            word-break: break-word;\n            font-size: 14px;\n        }\n    }\n}\n\n/* 添加更多动画效果 */\n@keyframes pulse {\n    0% {\n        transform: scale(1);\n    }\n\n    50% {\n        transform: scale(1.05);\n    }\n\n    100% {\n        transform: scale(1);\n    }\n}\n\n@keyframes slideUp {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* 添加响应式设计 */\n@media screen and (max-width: 768px) {\n    .kb-container {\n        padding: 10px;\n    }\n\n    .kb-header {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: 15px;\n\n        .kb-stats {\n            width: 100%;\n            justify-content: space-between;\n        }\n    }\n\n    .kb-card {\n        height: auto;\n        min-height: 130px;\n    }\n\n    .file-card {\n        flex-direction: column;\n\n        .file-icon {\n            width: 32px;\n            height: 32px;\n            margin-right: 0;\n            margin-bottom: 10px;\n        }\n\n        .file-title {\n            flex-wrap: wrap;\n            gap: 10px;\n        }\n\n        .file-info {\n            flex-direction: column;\n            gap: 5px;\n        }\n    }\n\n    .chunks-grid {\n        grid-template-columns: repeat(auto-fill, minmax(50px, 1fr)) !important;\n    }\n\n    .chunk-square.expanded {\n        min-height: 200px;\n    }\n}\n\n/* 优化弹窗样式 */\n:deep(.el-dialog) {\n    border-radius: 12px;\n    overflow: hidden;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n    animation: slideUp 0.3s ease-out;\n\n    .el-dialog__header {\n        padding: 20px;\n        margin: 0;\n        border-bottom: 1px solid var(--page-mcp-sidebar-border);\n        background-color: var(--page-mcp-sidebar-bg);\n    }\n\n    .el-dialog__title {\n        font-weight: 600;\n        font-size: 18px;\n        color: var(--page-mcp-header-text);\n    }\n\n    .el-dialog__body {\n        padding: 24px;\n        background-color: var(--standard-page-bg-color);\n    }\n\n    .el-dialog__footer {\n        padding: 16px 24px;\n        border-top: 1px solid var(--page-mcp-sidebar-border);\n        background-color: var(--page-mcp-sidebar-bg);\n    }\n}\n\n/* 优化按钮样式 */\n:deep(.el-button) {\n    border-radius: 6px;\n    font-weight: 500;\n    transition: all 0.3s;\n\n    &:hover {\n        transform: translateY(-2px);\n    }\n\n    &.is-disabled:hover {\n        transform: none;\n        box-shadow: none;\n    }\n}\n\n/* 优化表单样式 */\n:deep(.el-form-item) {\n    margin-bottom: 24px;\n    transition: all 0.2s ease;\n\n    &:hover {\n        transform: translateX(3px);\n    }\n\n    .el-input__wrapper,\n    .el-textarea__wrapper {\n        box-shadow: 0 0 0 1px var(--page-mcp-sidebar-border) inset;\n        transition: all 0.3s;\n\n        &:hover,\n        &.is-focus {\n            box-shadow: 0 0 0 1px var(--el-color-primary) inset;\n        }\n    }\n}\n\n/* 优化上传进度样式 */\n:deep(.el-progress-circle) {\n    animation: pulse 2s infinite;\n}\n</style>\n","import store from '@/store'\n\nexport default {\n\n    /**\n     * 添加新的知识库Repo\n     * @param {Object} repo 知识库对象\n     */\n    addRepo(repo) {\n        let kb = store.state.app.kb;\n        kb.list.push(repo);\n        store.dispatch('setKb', kb);\n    },\n\n    /**\n     * 删除知识库Repo\n     * @param {string} repoId 要删除的知识库id\n     */\n    delRepo(repoId) {\n        let kb = store.state.app.kb;\n        kb.list = kb.list.filter(repo => repo.repoId !== repoId);\n        store.dispatch('setKb', kb);\n    },\n\n    /**\n     * 更新知识库Repo\n     * @param {string} repoId 要更新的知识库id\n     * @param {Object} newRepo 新的知识库对象\n     */\n    updRepo(repoId, newRepo) {\n        let kb = store.state.app.kb;\n        let index = kb.list.findIndex(repo => repo.id === repoId);\n        if (index !== -1) {\n            kb.list[index] = newRepo;\n            store.dispatch('setKb', kb);\n        }\n    },\n\n    /**\n     * 添加文件到知识库\n     * @param {string} repoId 知识库id\n     * @param {Object} file 文件对象\n     */\n    addFile(repoId, file) {\n        let kb = store.state.app.kb;\n        console.log(kb)\n        let repo = kb.findRepository(repoId);\n        if (repo) {\n            repo.addFile(file);\n            store.dispatch('setKb', kb);\n        }\n    },\n\n    /**\n     * 删除知识库中的文件\n     * @param {string} repoId 知识库id\n     * @param {string} fileId 文件id\n     */\n    delFile(repoId, fileId) {\n        let kb = store.state.app.kb;\n        let repo = kb.findRepository(repoId);\n        if (repo) {\n            repo.removeFile(fileId);\n            store.dispatch('setKb', kb);\n        }\n    }\n\n}\n","import { render } from \"./index.vue?vue&type=template&id=1f9132e8&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=1f9132e8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1f9132e8\"]])\n\nexport default __exports__"],"names":["class","style","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$options","totalFiles","totalChunks","_createVNode","_component_el_row","gutter","justify","default","_withCtx","_component_el_col","md","sm","xs","lg","xl","onClick","_cache","$event","$data","createRepoDialogVisible","_hoisted_4","_component_el_icon","size","_component_Plus","_","_Fragment","_renderList","repos","repo","_createBlock","repoId","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","name","_hoisted_9","_component_el_tooltip","content","placement","_component_SvgIcon","openRepo","deleteRepo","_hoisted_10","description","_hoisted_11","_hoisted_12","createTime","_component_CustomDialog","modelValue","title","_component_el_form","model","newKbForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","maxlength","type","_hoisted_13","_component_el_button","createRepo","_createTextVNode","repoDialogVisible","activeRepo","_hoisted_14","files","x","_hoisted_15","src","_imports_0","alt","_hoisted_16","_hoisted_17","toggleChunks","showChunks","delFile","fileId","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","formatFileSize","_hoisted_22","_hoisted_23","list","chunk","index","_normalizeClass","isChunkExpanded","toggleChunkContent","_hoisted_25","_hoisted_27","_hoisted_28","length","_hoisted_29","_component_el_scrollbar","height","_hoisted_26","_hoisted_24","_createCommentVNode","_hoisted_30","_component_el_upload","drag","handleLocalUpload","multiple","beforeUpload","accept","tip","isUploading","_component_el_progress","percentage","uploadProgress","status","_hoisted_31","uploadStatusText","_component_upload_filled","addRepo","kb","store","state","app","push","dispatch","delRepo","filter","updRepo","newRepo","findIndex","id","addFile","file","console","log","findRepository","removeFile","segmentit","useDefault","Segment","data","required","message","trigger","progressTimer","fileChunksVisibility","expandedChunks","computed","this","$store","chunkSize","setting","chunk_size","statistics","created","methods","$refs","validate","valid","Repository","Date","now","toLocaleString","kbStoreHelper","resetFields","$confirm","confirmButtonText","cancelButtonText","then","$notify","catch","maxSize","kb_file_size","options","simulateProgress","setInterval","remainingProgress","increment","Math","max","floor","readFileContent","trim","chunks","splitContentIntoChunks","clearInterval","fileData","File","split","pop","toLowerCase","map","Chunk","doSegment","word","w","setTimeout","error","fileType","readPdfContent","readDocContent","readTxtContent","Error","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","fileReader","async","pdfData","Uint8Array","event","pdf","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","pdfDoc","promise","fullText","i","numPages","page","getPage","textContent","getTextContent","pageText","items","item","str","join","readAsArrayBuffer","mammoth","arrayBuffer","extractRawText","value","bytes","k","sizes","parseFloat","pow","toFixed","currentChunk","sentences","sentence","chunkIndex","__exports__","render"],"sourceRoot":""}