{"version":3,"file":"js/813.910a0e0f.js","mappings":"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","sources":["webpack://THChatUI/./src/views/kb/index.vue","webpack://THChatUI/./src/schema/kbStoreHelper.js","webpack://THChatUI/./src/views/kb/index.vue?440f"],"sourcesContent":["<template>\n    <div>\n        <!-- 知识库列表 -->\n        <el-row :gutter=\"24\" justify=\"center\" style=\"margin-left: 0;margin-right: 0;\">\n            <el-col :md=\"22\" :sm=\"22\" :xs=\"22\">\n                <div class=\"kb-header\">\n                    <h4>{{ $t('Kb.header') }}</h4>\n                    <div class=\"kb-stats\">\n                        <span>{{ $t('Kb.stats.totalFiles') }}: {{ totalFiles }}</span>\n                        <span>{{ $t('Kb.stats.totalChunks') }}: {{ totalChunks }}</span>\n                    </div>\n                </div>\n\n                <!-- 知识库卡片列表 -->\n                <el-row :gutter=\"24\">\n                    <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"6\">\n                        <div class=\"kb-card dashed-border create-kb-card\" @click=\"createRepoDialogVisible = true\">\n                            <div class=\"create-kb-content\">\n                                <el-icon :size=\"40\">\n                                    <Plus />\n                                </el-icon>\n                                <span class=\"create-text\">{{ this.$t('Kb.createRepo.title') }}</span>\n                            </div>\n                        </div>\n                    </el-col>\n                    <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"6\" v-for=\"repo in repos\" :key=\"repo.repoId\">\n                        <div class=\"kb-card dashed-border\">\n                            <div class=\"kb-card-header\">\n                                <div class=\"kb-card-title-row\">\n                                    <span class=\"kb-card-title\">{{ repo.name }}</span>\n                                    <div class=\"kb-card-actions\">\n                                        <el-tooltip content=\"管理\" placement=\"top\">\n                                            <svg class=\"action-icon\" @click=\"openRepo(repo)\"\n                                                xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"16\"\n                                                height=\"16\" fill=\"none\">\n                                                <path\n                                                    d=\"M15.5 12C15.5 13.933 13.933 15.5 12 15.5C10.067 15.5 8.5 13.933 8.5 12C8.5 10.067 10.067 8.5 12 8.5C13.933 8.5 15.5 10.067 15.5 12Z\"\n                                                    stroke=\"currentColor\" stroke-width=\"1.5\" />\n                                                <path\n                                                    d=\"M21.011 14.0965C21.5329 13.9558 21.7939 13.8854 21.8969 13.7508C22 13.6163 22 13.3998 22 12.9669V11.0332C22 10.6003 22 10.3838 21.8969 10.2493C21.7938 10.1147 21.5329 10.0443 21.011 9.90358C19.0606 9.37759 17.8399 7.33851 18.3433 5.40087C18.4817 4.86799 18.5509 4.60156 18.4848 4.44529C18.4187 4.28902 18.2291 4.18134 17.8497 3.96596L16.125 2.98673C15.7528 2.77539 15.5667 2.66972 15.3997 2.69222C15.2326 2.71472 15.0442 2.90273 14.6672 3.27873C13.208 4.73448 10.7936 4.73442 9.33434 3.27864C8.95743 2.90263 8.76898 2.71463 8.60193 2.69212C8.43489 2.66962 8.24877 2.77529 7.87653 2.98663L6.15184 3.96587C5.77253 4.18123 5.58287 4.28891 5.51678 4.44515C5.45068 4.6014 5.51987 4.86787 5.65825 5.4008C6.16137 7.3385 4.93972 9.37763 2.98902 9.9036C2.46712 10.0443 2.20617 10.1147 2.10308 10.2492C2 10.3838 2 10.6003 2 11.0332V12.9669C2 13.3998 2 13.6163 2.10308 13.7508C2.20615 13.8854 2.46711 13.9558 2.98902 14.0965C4.9394 14.6225 6.16008 16.6616 5.65672 18.5992C5.51829 19.1321 5.44907 19.3985 5.51516 19.5548C5.58126 19.7111 5.77092 19.8188 6.15025 20.0341L7.87495 21.0134C8.24721 21.2247 8.43334 21.3304 8.6004 21.3079C8.76746 21.2854 8.95588 21.0973 9.33271 20.7213C10.7927 19.2644 13.2088 19.2643 14.6689 20.7212C15.0457 21.0973 15.2341 21.2853 15.4012 21.3078C15.5682 21.3303 15.7544 21.2246 16.1266 21.0133L17.8513 20.034C18.2307 19.8187 18.4204 19.711 18.4864 19.5547C18.5525 19.3984 18.4833 19.132 18.3448 18.5991C17.8412 16.6616 19.0609 14.6226 21.011 14.0965Z\"\n                                                    stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\n                                            </svg>\n                                        </el-tooltip>\n\n                                        <el-tooltip content=\"删除\" placement=\"top\">\n                                            <svg class=\"action-icon delete\" @click=\"deleteRepo(repo.repoId)\"\n                                                xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"16\"\n                                                height=\"16\" fill=\"none\">\n                                                <path\n                                                    d=\"M19.5 5.5L18.8803 15.5251C18.7219 18.0864 18.6428 19.3671 18.0008 20.2879C17.6833 20.7431 17.2747 21.1273 16.8007 21.416C15.8421 22 14.559 22 11.9927 22C9.42312 22 8.1383 22 7.17905 21.4149C6.7048 21.1257 6.296 20.7408 5.97868 20.2848C5.33688 19.3626 5.25945 18.0801 5.10461 15.5152L4.5 5.5\"\n                                                    stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\n                                                <path\n                                                    d=\"M3 5.5H21M16.0557 5.5L15.3731 4.09173C14.9196 3.15626 14.6928 2.68852 14.3017 2.39681C14.215 2.3321 14.1231 2.27454 14.027 2.2247C13.5939 2 13.0741 2 12.0345 2C10.9688 2 10.436 2 9.99568 2.23412C9.8981 2.28601 9.80498 2.3459 9.71729 2.41317C9.32164 2.7167 9.10063 3.20155 8.65861 4.17126L8.05292 5.5\"\n                                                    stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" />\n                                                <path d=\"M9.5 16.5L9.5 10.5\" stroke=\"currentColor\" stroke-width=\"1.5\"\n                                                    stroke-linecap=\"round\" />\n                                                <path d=\"M14.5 16.5L14.5 10.5\" stroke=\"currentColor\" stroke-width=\"1.5\"\n                                                    stroke-linecap=\"round\" />\n                                            </svg>\n                                        </el-tooltip>\n                                    </div>\n                                </div>\n                            </div>\n                            <p class=\"kb-card-description\">{{ repo.description }}</p>\n                            <div class=\"kb-card-footer\">\n                                <span class=\"create-time\">{{ this.$t('Kb.repoDetail.createTime') }}: {{ repo.createTime }}</span>\n                            </div>\n                        </div>\n                    </el-col>\n                </el-row>\n\n            </el-col>\n        </el-row>\n\n        <!-- 自定义弹窗 -->\n        <CustomDialog v-model=\"createRepoDialogVisible\" :title=\"$t('Kb.createRepo.title')\">\n            <el-form :model=\"newKbForm\" label-width=\"100px\" :rules=\"rules\" ref=\"newKbForm\">\n                <el-form-item :label=\"$t('Kb.createRepo.name')\" prop=\"name\">\n                    <el-input v-model=\"newKbForm.name\" maxlength=\"10\" show-word-limit />\n                </el-form-item>\n                <el-form-item :label=\"$t('Kb.createRepo.description')\" prop=\"description\">\n                    <el-input type=\"textarea\" v-model=\"newKbForm.description\" />\n                </el-form-item>\n            </el-form>\n            <div style=\"text-align: right; margin-top: 20px;\">\n                <el-button type=\"primary\" @click=\"createRepo\">{{ this.$t('Common.confirm') }}</el-button>\n                <el-button @click=\"createRepoDialogVisible = false\">{{ this.$t('Common.cancel') }}</el-button>\n            </div>\n        </CustomDialog>\n\n        <!-- 知识库的文件列表弹窗 -->\n        <CustomDialog v-model=\"repoDialogVisible\" :title=\"`${activeRepo?.name || ''} - ${this.$t('Kb.repoDetail.fileList')}`\">\n            <div class=\"file-container\">\n                <!-- 文件展示部分 -->\n                <div class=\"file-card\" v-for=\"x in files\">\n                    <img src=\"@/assets/images/file.svg\" alt=\"File Icon\" class=\"file-icon\" />\n                    <div class=\"file-details\">\n                        <div class=\"file-title\">\n                            {{ x.name }}\n                            <el-button type=\"text\" size=\"small\" @click=\"toggleChunks(x)\">\n                                {{ x.showChunks ? this.$t('Kb.repoDetail.hideChunks') : this.$t('Kb.repoDetail.showChunks') }}\n                            </el-button>\n                            <button class=\"delete-btn\" @click=\"delFile(x.fileId)\">&#x2715;</button>\n                        </div>\n                        <div class=\"file-info\">\n                            <span class=\"upload-time\">{{ this.$t('Kb.repoDetail.uploadTime') }}: {{ x.createTime }}</span>\n                            <span class=\"file-size\">{{ this.$t('Kb.repoDetail.fileSize') }}: {{ formatFileSize(x.size) }}</span>\n                        </div>\n                        <!-- chunks预览部分 -->\n                        <div v-if=\"x.showChunks\" class=\"chunks-preview\">\n                            <div class=\"chunks-grid\">\n                                <div v-for=\"(chunk, index) in x.list\" \n                                     :key=\"index\" \n                                     class=\"chunk-square\"\n                                     @click=\"toggleChunkContent(x.fileId, index)\"\n                                     :class=\"{ 'expanded': isChunkExpanded(x.fileId, index) }\">\n                                    <div class=\"chunk-square-content\">\n                                        <template v-if=\"!isChunkExpanded(x.fileId, index)\">\n                                            <div class=\"chunk-number\">{{ index + 1 }}</div>\n                                        </template>\n                                        <template v-else>\n                                            <div class=\"chunk-expanded-header\">\n                                                <span>{{ $t('Kb.repoDetail.section') }} {{ index + 1 }}</span>\n                                                <span class=\"chunk-length\">{{ chunk.content.length }} {{ $t('Kb.repoDetail.characters') }}</span>\n                                            </div>\n                                            <div class=\"chunk-expanded-content\">\n                                                <el-scrollbar height=\"200px\">\n                                                    {{ chunk.content }}\n                                                </el-scrollbar>\n                                            </div>\n                                        </template>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- 文件上传部分 -->\n                <div class=\"upload-card\" style=\"border-bottom: none;\">\n                    <el-upload class=\"upload-button\" drag :auto-upload=\"true\" :http-request=\"handleLocalUpload\" multiple\n                        :before-upload=\"beforeUpload\" :show-file-list=\"false\" accept=\".pdf,.doc,.docx,.txt\">\n                        <template v-if=\"!isUploading\">\n                            <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n                            <div class=\"el-upload__text\">\n                                {{ $t('Kb.repoDetail.uploadTip') }}\n                            </div>\n                        </template>\n                        <template v-else>\n                            <el-progress type=\"circle\" :percentage=\"uploadProgress\"\n                                :status=\"uploadProgress === 100 ? 'success' : ''\" />\n                            <div class=\"upload-progress-text\">{{ uploadStatusText }}</div>\n                        </template>\n                        <template #tip>\n                            <div class=\"el-upload__tip\">\n                                {{ $t('Kb.repoDetail.uploadLimitTip') }}\n                            </div>\n                        </template>\n                    </el-upload>\n                </div>\n            </div>\n        </CustomDialog>\n\n    </div>\n</template>\n\n<script>\nimport { Repository, File, Chunk } from '@/schema/kb';\nimport kbStoreHelper from '@/schema/kbStoreHelper';\nimport { Segment, useDefault } from 'segmentit';\n\nconst segmentit = useDefault(new Segment());\n\n\nexport default {\n    name: \"Kb\",\n    data() {\n        return {\n            // 当前选中的知识库\n            activeRepo: null,\n            // 创建知识库弹窗是否显示\n            createRepoDialogVisible: false,\n            // 创建知识库表单\n            newKbForm: {\n                // 知识库名称\n                name: '',\n                // 知识库描述\n                description: ''\n            },\n            // 创建知识库表单校验规则\n            rules: {\n                name: [\n                    { required: true, message: this.$t('Kb.createRepo.nameRequired'), trigger: 'blur' }\n                ],\n                description: [\n                    { required: true, message: this.$t('Kb.createRepo.descriptionRequired'), trigger: 'blur' }\n                ]\n            },\n            // 知识库详情弹窗是否显示\n            repoDialogVisible: false,\n            uploadProgress: 0, // 添加上传进度状态\n            isUploading: false, // 添加上传状态标志\n            uploadStatusText: '',\n            progressTimer: null, // 添加计时器变量\n            fileChunksVisibility: {}, // 新增：用于存储每个文件的 chunks 显示状态\n            expandedChunks: {}, // 存储展开状态的chunks\n        }\n    },\n    computed: {\n        // 所有知识库列表\n        repos() {\n            return this.$store.state.app.kb.list;\n        },\n        // 当前选中知识库的文件列表,如果没有选中知识库则返回空数组\n        files() {\n            return this.activeRepo?.list || [];\n        },\n        // chunkSize\n        chunkSize() {\n            return this.$store.state.setting.chunk_size;\n        },\n        // 总文件数\n        totalFiles() {\n            return this.$store.state.app.kb.statistics.totalFiles;\n        },\n        // 总分段数\n        totalChunks() {\n            return this.$store.state.app.kb.statistics.totalChunks;\n        }\n    },\n    created() {\n        \n    },\n    methods: {\n        /**\n         * 创建知识库\n         */\n        createRepo() {\n            this.$refs.newKbForm.validate((valid) => {\n                if (valid) {\n                    const newRepo = new Repository(\n                        Date.now(),\n                        this.newKbForm.name,\n                        new Date().toLocaleString(),\n                        this.newKbForm.description,\n                        []\n                    );\n                    kbStoreHelper.addRepo(newRepo);\n                    this.createRepoDialogVisible = false;\n                    this.newKbForm = { name: '', description: '' };\n                    this.$refs.newKbForm.resetFields();\n                }\n            });\n        },\n\n        /**\n         * 打开知识库详情页面弹窗\n         * @param {Repository} repo 要打开的知识库对象\n         */\n        openRepo(repo) {\n            this.activeRepo = repo;\n            this.repoDialogVisible = true;\n        },\n\n        /**\n         * 删除知识库\n         * @param {Number} repoId 要删除的知识库ID\n         */\n        deleteRepo(repoId) {\n            this.$confirm(this.$t('Common.confirmDelete'), this.$t('Common.warn'), {\n                confirmButtonText: this.$t('Common.confirm'),\n                cancelButtonText: this.$t('Common.cancel'),\n                type: 'warning'\n            }).then(() => {\n                kbStoreHelper.delRepo(repoId);\n                this.$notify({\n                    title: this.$t('Common.success'),\n                    message: this.$t('Common.deleteSuccess'),\n                    type: 'success'\n                });\n            }).catch(() => { });\n        },\n\n        /**\n         * 上传文件前校验文件大小\n         * @param {File} file 待上传的文件对象\n         * @returns {boolean} 是否允许上传\n         */\n         beforeUpload(file) {\n            const maxSize = this.$store.state.setting.kb_file_size * 1024 * 1024;\n            if (file.size > maxSize) {\n                this.$notify({\n                    title: this.$t('Common.error'),\n                    message: this.$t('Common.failed'),\n                    type: 'error'\n                });\n                return false; // 阻止上传\n            }\n            return true; // 允许上传\n        },\n\n        /**\n         * 处理本地文件上传\n         * @param {Object} options 上传选项对象\n         */\n        async handleLocalUpload(options) {\n            const file = options.file;\n\n            // 重置上传状态\n            this.isUploading = true;\n            this.uploadProgress = 0;\n            this.uploadStatusText = this.$t('Kb.repoDetail.preparing');\n\n            try {\n                // 模拟文件读取进度，使用衰减增长\n                const simulateProgress = setInterval(() => {\n                    if (this.uploadProgress < 90) {\n                        // 计算剩余进度空间\n                        const remainingProgress = 90 - this.uploadProgress;\n                        // 使用衰减因子，随着进度增加而减少增量\n                        const increment = Math.max(1, Math.floor(remainingProgress * 0.2));\n                        this.uploadProgress += increment;\n                        this.uploadStatusText = this.$t('Kb.repoDetail.processing');\n                    }\n                }, 1000);\n\n                // 读取文件内容\n                const content = await this.readFileContent(file);\n\n                // 检查内容是否为空\n                if (!content || content.trim() === '') {\n                    this.$notify({\n                        title: this.$t('Common.warn'),\n                        message: this.$t('Kb.repoDetail.noContent'),\n                        type: 'warning'\n                    });\n                    this.isUploading = false;\n                    this.uploadProgress = 0;\n                    this.uploadStatusText = '';\n                    return;\n                }\n\n                // 将内容分割成chunks\n                const chunks = this.splitContentIntoChunks(content, this.chunkSize);\n\n                // 清除进度模拟\n                clearInterval(simulateProgress);\n\n                // 创建文件对象\n                const fileData = new File(\n                    Date.now(),\n                    file.name,\n                    new Date().toLocaleString(),\n                    file.name.split('.').pop().toLowerCase(),\n                    '',\n                    file.size,\n                    chunks.map(chunk => new Chunk(Date.now(), chunk, segmentit.doSegment(chunk.toLowerCase()).map(word => word.w))) // 添加chunks并分词\n                );\n\n                // 添加文件到知识库\n                kbStoreHelper.addFile(this.activeRepo.repoId, fileData);\n\n                // 完成上传\n                this.uploadProgress = 100;\n                this.uploadStatusText = this.$t('Kb.repoDetail.uploadComplete');\n\n                // 显示成功通知\n                this.$notify({\n                    title: this.$t('Common.success'),\n                    message: this.$t('Kb.repoDetail.uploadComplete'),\n                    type: 'success'\n                });\n\n                // 重置状态\n                setTimeout(() => {\n                    this.isUploading = false;\n                    this.uploadProgress = 0;\n                    this.uploadStatusText = '';\n                }, 1500);\n\n            } catch (error) {\n                console.error('文件上传失败:', error);\n                this.uploadStatusText = this.$t('Kb.repoDetail.uploadFailed');\n\n                this.$notify({\n                    title: this.$t('Common.error'),\n                    message: this.$t('Kb.repoDetail.uploadFailed'),\n                    type: 'error'\n                });\n\n                // 重置状态\n                setTimeout(() => {\n                    this.isUploading = false;\n                    this.uploadProgress = 0;\n                    this.uploadStatusText = '';\n                }, 1500);\n            }\n        },\n\n        /**\n         * 读取文件内容 分流处理\n         * @param {File} file 文件对象\n         */\n        async readFileContent(file) {\n            const fileType = file.name.split('.').pop().toLowerCase();\n\n            switch (fileType) {\n                case 'pdf':\n                    return await this.readPdfContent(file);\n                case 'doc':\n                case 'docx':\n                    return await this.readDocContent(file);\n                case 'txt':\n                    return await this.readTxtContent(file);\n                default:\n                    throw new Error('不支持的文件格式');\n            }\n        },\n\n        /**\n         * 读取txt文本文件内容\n         * @param {File} file 文件对象\n         */\n        readTxtContent(file) {\n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onload = (e) => resolve(e.target.result);\n                reader.onerror = (e) => reject(e);\n                reader.readAsText(file, 'UTF-8');\n            });\n        },\n\n        /**\n         * 读取pdf文件内容\n         * @param {File} file 文件对象\n         */\n        async readPdfContent(file) {\n            return new Promise((resolve, reject) => {\n                const fileReader = new FileReader();\n\n                fileReader.onload = async (event) => {\n                    try {\n                        const pdfData = new Uint8Array(event.target.result);\n                        const pdf = await import('pdfjs-dist');\n                        pdf.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdf.version}/pdf.worker.min.js`;\n\n                        const loadingTask = pdf.getDocument(pdfData);\n                        const pdfDoc = await loadingTask.promise;\n\n                        let fullText = '';\n                        for (let i = 1; i <= pdfDoc.numPages; i++) {\n                            const page = await pdfDoc.getPage(i);\n                            const textContent = await page.getTextContent();\n                            const pageText = textContent.items.map(item => item.str).join(' ');\n                            fullText += pageText + '\\n';\n                        }\n\n                        resolve(fullText);\n                    } catch (error) {\n                        reject(error);\n                    }\n                };\n                fileReader.onerror = reject;\n                fileReader.readAsArrayBuffer(file);\n            });\n        },\n\n        /**\n         * 读取doc/docx文件内容\n         * @param {File} file 文件对象\n         */\n        async readDocContent(file) {\n            const mammoth = await import('mammoth');\n            const arrayBuffer = await file.arrayBuffer();\n            const result = await mammoth.extractRawText({ arrayBuffer });\n            return result.value;\n        },\n\n        /**\n         * 删除文件\n         * @param {string} fileId 文件ID\n         */\n        async delFile(fileId) {\n            try {\n                await this.$confirm(\n                    this.$t('Kb.repoDetail.deleteFile.confirm'), \n                    this.$t('Common.warn'),\n                    {\n                        confirmButtonText: this.$t('Common.confirm'),\n                        cancelButtonText: this.$t('Common.cancel'),\n                        type: 'warning'\n                    }\n                );\n\n                kbStoreHelper.delFile(this.activeRepo.repoId, fileId);\n\n                this.$notify({\n                    title: this.$t('Common.success'),\n                    message: this.$t('Kb.repoDetail.deleteFile.success'),\n                    type: 'success'\n                });\n            } catch (error) {\n                if (error !== 'cancel') {\n                    console.error('文件删除失败:', error);\n                    this.$notify({\n                        title: this.$t('Common.error'),\n                        message: this.$t('Kb.repoDetail.deleteFile.failed'),\n                        type: 'error'\n                    });\n                }\n            }\n        },\n\n        /**\n         * 格式化文件大小\n         * @param {number} bytes 文件大小(字节)\n         * @returns {string} 格式化后的文件大小\n         */\n        formatFileSize(bytes) {\n            if (!bytes) return '0 B';\n            const k = 1024;\n            const sizes = ['B', 'KB', 'MB', 'GB'];\n            const i = Math.floor(Math.log(bytes) / Math.log(k));\n            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n        },\n\n        // 添加新方法用于分割内容\n        splitContentIntoChunks(content, chunkSize) {\n            const chunks = [];\n            let currentChunk = '';\n            const sentences = content.split(/[。！？.!?]/); // 按句子分割\n\n            for (const sentence of sentences) {\n                if ((currentChunk + sentence).length > chunkSize) {\n                    if (currentChunk) {\n                        chunks.push(currentChunk.trim());\n                    }\n                    currentChunk = sentence;\n                } else {\n                    currentChunk += sentence;\n                }\n            }\n\n            if (currentChunk) {\n                chunks.push(currentChunk.trim());\n            }\n\n            return chunks;\n        },\n\n        /**\n         * 切换显示/隐藏文件的chunks\n         * @param {File} file 文件对象\n         */\n        toggleChunks(file) {\n            file.showChunks = !file.showChunks;\n        },\n\n        /**\n         * 切换chunk内容的显示状态\n         * @param {string} fileId 文件ID\n         * @param {number} index 分段索引\n         */\n        toggleChunkContent(fileId, index) {\n            const key = `${fileId}-${index}`;\n            this.expandedChunks[key] = !this.expandedChunks[key];\n        },\n\n        /**\n         * 判断chunk是否展开\n         * @param {string} fileId 文件ID\n         * @param {number} chunkIndex chunk索引\n         * @returns {boolean} 是否展开\n         */\n        isChunkExpanded(fileId, chunkIndex) {\n            const key = `${fileId}-${chunkIndex}`;\n            return this.expandedChunks[key];\n        }\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n/**\n * 通用的hover和active效果定义\n */\n@mixin hover-active-effect {\n\n    &.active,\n    &:hover {\n        background: var(--aside-active-hover-bg);\n        border-radius: 5px;\n    }\n}\n\n/**\n * 表单Label颜色\n */\n:deep(.el-form-item__label) {\n    color: var(--common-color);\n}\n\n/**\n * 页面头部标题\n */\n.kb-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-family: PingFang SC;\n    font-size: 28px;\n    line-height: 28px;\n    margin-bottom: 20px;\n\n    .kb-stats {\n        display: flex;\n        gap: 20px;\n        font-size: 14px;\n        color: var(--answer-stats-color);\n    }\n}\n\n/**\n * 知识库卡片\n */\n.kb-card {\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    padding: 5px 18px;\n    border-radius: 8px;\n    margin: 5px 0 5px 0;\n    height: 120px;\n    justify-content: space-between;\n    border: 2px solid var(--app-small-border-color);\n    box-shadow: none;\n    transition: all 0.2s ease;\n\n    &:hover {\n        transform: translateY(-2px);\n        border-color: var(--el-color-primary-light-5);\n    }\n\n    /* 卡片内部头部 */\n    >.kb-card-header {\n        font-weight: bold;\n        margin-bottom: 10px;\n\n        /* 卡片标题行,包含标题和操作按钮 */\n        >.kb-card-title-row {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            /* 卡片操作按钮容器 */\n            >.kb-card-actions {\n                display: flex;\n                gap: 12px;\n\n                .action-icon {\n                    cursor: pointer;\n                    font-size: 16px;\n                    padding: 4px;\n                    opacity: 0.7;\n                    transition: all 0.2s;\n\n                    &:hover {\n                        opacity: 1;\n                        background: none;\n                        transform: scale(1.1);\n                    }\n\n                    &.delete:hover {\n                        color: #F56C6C;\n                    }\n                }\n            }\n        }\n    }\n\n    /* 卡片描述文本 */\n    .kb-card-description {\n        font-size: 12px;\n        line-height: 1.5;\n        color: #666;\n        margin-bottom: 10px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        line-clamp: 2;\n        -webkit-box-orient: vertical;\n    }\n\n    /* 卡片底部信息 */\n    .kb-card-footer {\n        font-size: 12px;\n        color: #999;\n\n        /* 创建时间 */\n        >.create-time {\n            font-style: italic;\n        }\n    }\n}\n\n/**\n * 创建知识库卡片\n */\n.create-kb-card {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.3s;\n    border: 2px dashed var(--app-small-border-color);\n    background: transparent;\n\n    &:hover {\n        border-color: var(--el-color-primary);\n        background: transparent;\n        \n        .create-kb-content {\n            color: var(--el-color-primary);\n        }\n    }\n\n    >.create-kb-content {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        color: #909399;\n\n        >.create-text {\n            margin-top: 10px;\n            font-size: 14px;\n        }\n    }\n}\n\n.file-container {\n    display: flex;\n    flex-direction: column;\n    padding: 5px;\n    border-radius: 8px;\n    margin: 5px 0 5px 0;\n\n    /* 卡片样式 */\n    >.file-card,\n    .upload-card {\n        display: flex;\n\n        justify-content: space-between;\n        padding: 10px;\n        border-bottom: 1px dashed grey;\n\n        /* 文件图标样式 */\n        >.file-icon {\n            width: 40px;\n            height: 40px;\n            object-fit: cover;\n            margin-right: 10px;\n            border-radius: 5px;\n        }\n\n        /* 文件详情样式 */\n        >.file-details {\n            flex: 1;\n\n            >.file-title {\n                font-size: 14px;\n                font-weight: bold;\n                margin-bottom: 5px;\n                display: flex;\n                align-items: center;\n                gap: 10px;\n                color: var(--common-color);\n                \n                .delete-btn {\n                    background: none;\n                    border: none;\n                    color: #f00;\n                    cursor: pointer;\n                    font-size: 18px;\n                    padding: 0;\n                    margin-left: auto;\n                }\n            }\n\n            >.file-info {\n                display: flex;\n                gap: 15px;\n                font-size: 12px;\n                color: var(--answer-stats-color);\n\n                .upload-time,\n                .file-size {\n                    white-space: nowrap;\n                }\n            }\n        }\n\n        /* 拖拽上传按钮 */\n        >.upload-button {\n            width: 100%;\n        }\n    }\n}\n\n:deep(.el-upload-dragger) {\n    padding: 0;\n    background: none;\n}\n\n.el-upload__tip {\n    text-align: center;\n}\n\n:deep(.el-page-header__content),\n:deep(.el-page-header__back) {\n    color: var(--common-color);\n}\n\n.upload-progress-text {\n    margin-top: 10px;\n    color: #909399;\n    font-size: 14px;\n    text-align: center;\n}\n\n:deep(.el-progress) {\n    margin: 10px auto;\n}\n\n.chunks-preview {\n    font-size: 12px;\n    margin-top: 10px;\n    \n    .chunks-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(40px, 1fr));\n        gap: 8px;\n    }\n    \n    .chunk-square {\n        border-radius: 8px;\n        cursor: pointer;\n        transition: all 0.2s;\n        border: 1px solid var(--app-small-border-color);\n        background: transparent;\n        color: var(--answer-stats-color);\n\n        &:hover {\n            border-color: var(--el-color-primary-light-5);\n        }\n        \n        &.expanded {\n            aspect-ratio: auto;\n            grid-column: 1 / -1;\n            height: auto;\n            min-height: 250px;\n            border-width: 2px;\n        }\n        \n        .chunk-square-content {\n            padding: 8px;\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n        }\n        \n        .chunk-number {\n            text-align: center;\n        }\n        \n        .chunk-length {\n            color: var(--answer-stats-color);\n            margin-top: 8px;\n        }\n        \n        .chunk-expanded-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            margin-bottom: 12px;\n            font-weight: bold;\n        }\n        \n        .chunk-expanded-content {\n            flex: 1;\n            line-height: 1.6;\n            color: var(--answer-stats-color);\n            white-space: pre-wrap;\n            word-break: break-word;\n        }\n    }\n}\n</style>\n","import store from '@/store'\n\nexport default {\n\n    /**\n     * 添加新的知识库Repo\n     * @param {Object} repo 知识库对象\n     */\n    addRepo(repo) {\n        let kb = store.state.app.kb;\n        kb.list.push(repo);\n        store.dispatch('setKb', kb);\n    },\n\n    /**\n     * 删除知识库Repo\n     * @param {string} repoId 要删除的知识库id\n     */\n    delRepo(repoId) {\n        let kb = store.state.app.kb;\n        kb.list = kb.list.filter(repo => repo.repoId !== repoId);\n        store.dispatch('setKb', kb);\n    },\n\n    /**\n     * 更新知识库Repo\n     * @param {string} repoId 要更新的知识库id\n     * @param {Object} newRepo 新的知识库对象\n     */\n    updRepo(repoId, newRepo) {\n        let kb = store.state.app.kb;\n        let index = kb.list.findIndex(repo => repo.id === repoId);\n        if (index !== -1) {\n            kb.list[index] = newRepo;\n            store.dispatch('setKb', kb);\n        }\n    },\n\n    /**\n     * 添加文件到知识库\n     * @param {string} repoId 知识库id\n     * @param {Object} file 文件对象\n     */\n    addFile(repoId, file) {\n        let kb = store.state.app.kb;\n        console.log(kb)\n        let repo = kb.findRepository(repoId);\n        if (repo) {\n            repo.addFile(file);\n            store.dispatch('setKb', kb);\n        }\n    },\n\n    /**\n     * 删除知识库中的文件\n     * @param {string} repoId 知识库id\n     * @param {string} fileId 文件id\n     */\n    delFile(repoId, fileId) {\n        let kb = store.state.app.kb;\n        let repo = kb.findRepository(repoId);\n        if (repo) {\n            repo.removeFile(fileId);\n            store.dispatch('setKb', kb);\n        }\n    }\n\n}\n","import { render } from \"./index.vue?vue&type=template&id=4ae53a5a&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=4ae53a5a&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4ae53a5a\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","d","stroke","_hoisted_11","_hoisted_12","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","style","src","_imports_0","alt","key","_createElementBlock","_createVNode","_component_el_row","gutter","justify","default","_withCtx","_component_el_col","md","sm","xs","_hoisted_1","_toDisplayString","_ctx","$t","_hoisted_2","$options","totalFiles","totalChunks","lg","xl","onClick","_cache","$event","$data","createRepoDialogVisible","_hoisted_3","_component_el_icon","size","_component_Plus","_","_hoisted_4","_Fragment","_renderList","repos","repo","_createBlock","repoId","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","name","_hoisted_9","_component_el_tooltip","content","placement","openRepo","xmlns","viewBox","width","height","fill","_hoisted_13","_hoisted_10","deleteRepo","_hoisted_19","_hoisted_14","_hoisted_20","description","_hoisted_21","_hoisted_22","createTime","_component_CustomDialog","modelValue","title","_component_el_form","model","newKbForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","maxlength","type","_hoisted_23","_component_el_button","createRepo","_createTextVNode","repoDialogVisible","activeRepo","this","_hoisted_24","files","x","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","toggleChunks","showChunks","delFile","fileId","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","formatFileSize","_hoisted_33","_hoisted_34","list","chunk","index","_normalizeClass","isChunkExpanded","toggleChunkContent","_hoisted_36","_hoisted_38","_hoisted_39","length","_hoisted_40","_component_el_scrollbar","_hoisted_37","_hoisted_35","_createCommentVNode","_hoisted_41","_component_el_upload","drag","handleLocalUpload","multiple","beforeUpload","accept","tip","_hoisted_44","isUploading","_component_el_progress","percentage","uploadProgress","status","_hoisted_43","uploadStatusText","_component_upload_filled","_hoisted_42","addRepo","kb","store","state","app","push","dispatch","delRepo","filter","updRepo","newRepo","findIndex","id","addFile","file","console","log","findRepository","removeFile","segmentit","useDefault","Segment","data","required","message","trigger","progressTimer","fileChunksVisibility","expandedChunks","computed","$store","chunkSize","setting","chunk_size","statistics","created","methods","$refs","validate","valid","Repository","Date","now","toLocaleString","kbStoreHelper","resetFields","$confirm","confirmButtonText","cancelButtonText","then","$notify","catch","maxSize","kb_file_size","options","simulateProgress","setInterval","remainingProgress","increment","Math","max","floor","readFileContent","trim","chunks","splitContentIntoChunks","clearInterval","fileData","File","split","pop","toLowerCase","map","Chunk","doSegment","word","w","setTimeout","error","fileType","readPdfContent","readDocContent","readTxtContent","Error","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","fileReader","async","pdfData","Uint8Array","event","pdf","GlobalWorkerOptions","workerSrc","version","loadingTask","getDocument","pdfDoc","promise","fullText","i","numPages","page","getPage","textContent","getTextContent","pageText","items","item","str","join","readAsArrayBuffer","mammoth","arrayBuffer","extractRawText","value","bytes","k","sizes","parseFloat","pow","toFixed","currentChunk","sentences","sentence","chunkIndex","__exports__","render"],"sourceRoot":""}