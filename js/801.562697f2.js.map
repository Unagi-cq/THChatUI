{"version":3,"file":"js/801.562697f2.js","mappings":"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","sources":["webpack://THChatUI/../../src/parse.ts","webpack://THChatUI/../../src/fetch.ts","webpack://THChatUI/./src/api/Zhipu_BigModel/index.js"],"sourcesContent":[null,null,"/**\n * @fileoverview 智谱AI平台的HTTP调用。\n * 语言模型和图片理解接口采用SSE请求方式，不需要跨域配置\n * 图片生成模型采用普通的fetch请求\n */\nimport {fetchEventSource} from \"@microsoft/fetch-event-source\";\nimport {preProcess} from \"@/util/config\"\nimport store from '../../store';\n\n// 定义不同类型模型的请求地址\nconst API_URLS = {\n    llm: \"https://open.bigmodel.cn/api/paas/v4/chat/completions\",\n    vim: \"https://open.bigmodel.cn/api/paas/v4/chat/completions\", // 图片理解模型接口\n    igm: \"https://open.bigmodel.cn/api/paas/v4/images/generations\" // 图生成模型接口\n};\n\n/**\n * 调用智谱AI平台的接口\n * @param {string} prompt - 用户输入的问题\n * @param {Array} history - 历史对话消息\n * @param {Array} files - 文件列表\n * @param {AbortController} controller - 控制请求的取消\n * @param {Function} onopen - 连接成功回调\n * @param {Function} onmessage - 接收消息回调\n * @param {Function} onclose - 连接关闭回调\n * @param {Function} onerror - 错误处理回调\n */\nexport async function fetchAPI({\n    prompt,\n    history,\n    files,\n    controller,\n    onopen,\n    onmessage, \n    onclose,\n    onerror\n}) {\n    const { setting } = store.state;\n    const { model_config } = setting;\n    const { version, pre_method, type } = model_config;\n    const api_key = setting.api_key_map[setting.platform];\n\n    const url = API_URLS[type] || API_URLS.llm;\n\n    // 如果是图片生成接口，使用普通的fetch请求\n    if (type === 'igm') {\n        onopen({ status: 200 });\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${api_key}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(preProcess(version, prompt, history, pre_method, files, false)),\n            });\n            const data = await response.json();\n            onmessage(data);\n            onclose();\n            return;\n        } catch (error) {\n            onerror(error);\n            return;\n        }\n    }\n\n    // 对于LLM和VIM接口使用SSE\n    const requestConfig = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${api_key}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(preProcess(version, prompt, history, pre_method, files, false)),\n        signal: controller.signal,\n        onopen,\n        onmessage,\n        onclose,\n        onerror,\n        openWhenHidden: true\n    };\n\n    return await fetchEventSource(url, requestConfig);\n}"],"names":["getBytes","stream","onChunk","reader","getReader","result","read","done","value","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","arr","undefined","concat","bufLength","length","lineStart","lineEnd","subarray","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","TextDecoder","line","field","decode","valueOffset","data","event","id","retry","parseInt","isNaN","a","b","res","Uint8Array","set","EventStreamContentType","DefaultRetryInterval","LastEventId","fetchEventSource","input","_a","signal","inputSignal","headers","inputHeaders","onopen","inputOnOpen","onmessage","onclose","onerror","openWhenHidden","fetch","inputFetch","rest","__rest","Promise","resolve","reject","Object","assign","curRequestController","onVisibilityChange","abort","document","hidden","create","accept","addEventListener","retryInterval","retryTimer","dispose","removeEventListener","window","clearTimeout","defaultOnOpen","AbortController","response","body","err","aborted","interval","setTimeout","innerErr","contentType","get","startsWith","Error","API_URLS","llm","vim","igm","async","fetchAPI","prompt","history","files","controller","setting","store","state","model_config","version","pre_method","type","api_key","api_key_map","platform","url","status","method","JSON","stringify","preProcess","json","error","requestConfig"],"sourceRoot":""}