{"version":3,"file":"js/82.6584beb5.js","mappings":"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","sources":["webpack://THChatUI/./src/api/Yidong_CMECloud/index.js","webpack://THChatUI/./src/util/config.js","webpack://THChatUI/../../src/parse.ts","webpack://THChatUI/../../src/fetch.ts"],"sourcesContent":["/**\n * @fileoverview 移动云平台的HTTP调用。\n * 接口采用SSE请求方式，直接调会跨域，需要配代理，部署在服务器上之后也需要配置代理，详情可以参考本项目的文档\n */\nimport { fetchEventSource } from \"@microsoft/fetch-event-source\";\nimport { preProcess } from \"@/util/config\"\nimport store from '../../store';\n\n// 移动云平台的接口地址\nconst API_URLS = {\n    llm: \"/yidong/remote/inference-api/exp-api/inf-1337014908971847680/v1/chat/completions\", // 暂时需要手动修改此时 未来会重构API KEY管理模块\n    vim: \"\", // 预留图片理解模型接口\n    igm: \"\" // 预留图生成模型接口\n};\n\n/**\n * 调用移动云平台的接口\n * @param {string} prompt - 用户输入的问题\n * @param {Array} history - 历史对话消息\n * @param {Array} files - 文件列表\n * @param {AbortController} controller - 控制请求的取消\n * @param {Function} onopen - 连接成功回调\n * @param {Function} onmessage - 接收消息回调\n * @param {Function} onclose - 连接关闭回调\n * @param {Function} onerror - 错误处理回调\n */\nexport async function fetchAPI({\n    prompt,\n    history,\n    files,\n    controller,\n    onopen,\n    onmessage,\n    onclose,\n    onerror\n}) {\n    const { setting } = store.state;\n    const { model_config } = setting;\n    const { version, pre_method, type } = model_config;\n    const api_key = setting.api_key_map[setting.platform];\n\n    const url = API_URLS[type] || API_URLS.llm;\n\n    const requestConfig = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${api_key}`,\n            'Content-Type': 'application/json',\n            'Accept': 'text/event-stream'\n        },\n        body: JSON.stringify(preProcess(version, prompt, history, pre_method, files, false)),\n        signal: controller.signal,\n        onopen,\n        onmessage,\n        onclose,\n        onerror,\n        openWhenHidden: true\n    };\n\n    return await fetchEventSource(url, requestConfig);\n} ","/**\n * @fileoverview 聊天应用的配置文件\n * 包含模型配置、消息预处理和后处理的相关功能\n * 支持多个AI平台的接入，包括阿里云、百度、讯飞、智谱AI等\n */\n\n/**\n * 前处理(入参)规则处理\n * @param {string} model_version - 模型版本标识\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {string} pre_method - 预处理方法标识\n * @param {Array} files - 上传的文件数组，主要用于图像处理\n * @param {boolean} is_search - 是否启用网络搜索功能\n */\nfunction preProcess(model_version, prompt, history, pre_method, files, is_search) {\n    let body = {};\n    console.log(is_search);\n    switch (pre_method) {\n        // 阿里平台的文本输入格式\n        case \"text_ali\":\n            body = {\n                model: model_version,\n                input: {\n                    messages: buildLlmMessage(prompt, history)\n                },\n                parameters: {\n                    result_format: \"message\",\n                    incremental_output: true\n                }\n            }\n            if (is_search) {\n                body.parameters.enable_search = true;\n            }\n            break;\n        // 百度平台的文本输入格式\n        case \"text_baidu\":\n            body = {\n                model: model_version,\n                messages: buildLlmMessage(prompt, history),\n                stream: true\n            }\n            if (is_search) {\n                body.web_search = {\n                    enable: true\n                };\n            }\n            break;\n        // 讯飞平台的文本输入格式\n        case \"text_xunfei\":\n            body = {\n                parameter: {\n                    chat: {\n                        domain: \"general\",\n                        temperature: 0.5,\n                        max_tokens: 1024,\n                    },\n                },\n                payload: {\n                    message: {\n                        text: buildLlmMessage(prompt, history)\n                    },\n                },\n            }\n            break;\n        // 智谱AI和月之暗面的文本输入格式\n        case \"text_moonshot_zhipu\":\n            body = {\n                model: model_version,\n                messages: buildLlmMessage(prompt, history),\n                stream: true\n            }\n            break;\n        // 本地接口 文本输入格式\n        case \"local\": \n            body = {\n                input: {\n                    prompt: prompt,\n                    history: getLocalHistory(history),\n                    files: files\n                }\n            };\n            break;\n        // 阿里平台的图片输入格式\n        case \"img_ali\":\n            body = {\n                model: model_version,\n                input: {\n                    messages: buildAliVLMessage(prompt, history, files)\n                },\n                parameters: {\n                    result_format: \"message\",\n                    incremental_output: true\n                }\n            }\n            break;\n        // 智谱AI平台的图片输入格式\n        case \"img_zhipu\":\n            body = {\n                model: model_version,\n                messages: buildZhipuVLMessage(prompt, history, files),\n                stream: true\n            }\n            break;\n        // 智谱AI平台的图片生成模型输入格式\n        case \"igm_zhipu\":\n            body = {\n                model: model_version,\n                prompt: prompt\n            }\n            break;\n    }\n    return body;\n}\n\n/**\n * 构建LLM文本对话消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n */\nfunction buildLlmMessage(prompt, history) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.query\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": chat.answer\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history)\n    arr.push({\n        \"role\": \"user\",\n        \"content\": prompt\n    })\n    return arr;\n}\n\n/**\n * 构建智谱AI平台的多模态消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n */\nfunction buildZhipuVLMessage(prompt, history, files) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": [{ \"type\": \"text\", \"text\": chat.query }]\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": [{ \"type\": \"text\", \"text\": chat.answer }]\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history);\n    let content = [];\n\n    if (files && files.length > 0 && files[0].base64) {\n        content.push({\n            \"type\": \"image_url\",\n            \"image_url\": {\n                \"url\": files[0].base64\n            }\n        });\n    }\n\n    content.push({\n        \"type\": \"text\",\n        \"text\": prompt\n    });\n\n    arr.push({\n        \"role\": \"user\",\n        \"content\": content\n    });\n\n    return arr;\n}\n\n/**\n * 构建阿里云平台的多模态消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n */\nfunction buildAliVLMessage(prompt, history, files) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": [{ \"text\": chat.query }]\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": [{ \"text\": chat.answer }]\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history);\n    let content = [];\n\n    if (files && files.length > 0 && files[0].base64) {\n        content.push({\n            \"image\": files[0].base64\n        });\n    }\n\n    content.push({\n        \"text\": prompt\n    });\n\n    arr.push({\n        \"role\": \"user\",\n        \"content\": content\n    });\n\n    return arr;\n}\n\n/**\n * 本地接口 拼接历史对话\n * @param history\n * @returns {*[]}\n */\nfunction getLocalHistory(history) {\n    const array = [];\n    for (let i = 0; i < history.length; i++) {\n        const chat = history[i];\n        array.push({\n            user: chat.query,\n            assistant: chat.answer,\n        });\n    }\n\n    return array;\n}\n\n/**\n * 后处理(出参)规则处理\n * @param {Object} e - API返回的原始数据\n * @param {string} post_method - 后处理方法标识\n */\nfunction postProcess(e, post_method) {\n    switch (post_method) {\n        case \"base\":\n            return {content:JSON.parse(e.data).output.choices[0].message.content};\n        case \"text\":\n            const content = JSON.parse(e.data).output.choices[0].message.content;\n            return { content: content && content.length > 0 ? content[0].text : '' };\n        case \"add\":\n            return {content:e};\n        case \"delta\":\n            return {content:JSON.parse(e.data).choices[0].delta.content};\n        case \"delta_reasoning\":\n            if (JSON.parse(e.data).choices[0].delta.reasoning_content) {\n                return {reasoning_content:JSON.parse(e.data).choices[0].delta.reasoning_content};\n            } else {\n                return {content:JSON.parse(e.data).choices[0].delta.content};\n            }\n        case \"baidu\":\n            return {content:JSON.parse(e.data).result};\n        case \"llm_local\":\n            if (e.event !== 'data') return '';\n            // 解析chunk里面的data参数\n            const data = JSON.parse(e.data);\n            try {\n                return {content:data.data.content};\n            } catch (e) {\n                console.error(e)\n            }\n        case \"igm_zhipu\":\n            return {content:e.data[0].url};\n        default:\n            console.warn(`未知的后处理方法: ${post_method}`);\n            return e;\n    }\n}\n\nmodule.exports = {\n    /**\n     * 模型列表\n     */\n    model_list: {\n        \"Ali_DashScope\": {\n            platform_name: \"阿里云百炼\",\n            list: [\n                { type: \"llm\", name: \"qwen-turbo\", series: \"qwen\", version: \"qwen-turbo-latest\", pre_method: \"text_ali\", post_method: \"base\", can_web_search: true },\n                { type: \"llm\", name: \"qwen-plus\", series: \"qwen\", version: \"qwen-plus-latest\", pre_method: \"text_ali\", post_method: \"base\", can_web_search: true },\n                { type: \"llm\", name: \"qwen-max\", series: \"qwen\", version: \"qwen-max-latest\", pre_method: \"text_ali\", post_method: \"base\", can_web_search: true },\n                { type: \"llm\", name: \"qwen-math-turbo\", series: \"qwen\", version: \"qwen-math-turbo-latest\", pre_method: \"text_ali\", post_method: \"base\" },\n                { type: \"llm\", name: \"qwen-coder-plus\", series: \"qwen\", version: \"qwen-coder-plus-latest\", pre_method: \"text_ali\", post_method: \"base\" },\n                { type: \"vim\", name: \"qwen-vl-max\", series: \"qwen\", version: \"qwen-vl-max-latest\", pre_method: \"img_ali\", post_method: \"text\" },\n                { type: \"vim\", name: \"qwen-vl-plus\", series: \"qwen\", version: \"qwen-vl-plus-latest\", pre_method: \"img_ali\", post_method: \"text\" },\n                { type: \"vim\", name: \"qwen-vl-ocr\", series: \"qwen\", version: \"qwen-vl-ocr-latest\", pre_method: \"img_ali\", post_method: \"text\" },\n            ]\n        },\n        \"Baidu_QianFan\":\n        {\n            platform_name: \"百度千帆\",\n            list: [\n                { type: \"llm\", name: \"ernie-4.0-8k\", series: \"wenxin\", version: \"ernie-4.0-8k-latest\", pre_method: \"text_baidu\", post_method: \"baidu\", can_web_search: true },\n                { type: \"llm\", name: \"ernie-speed-128k\", series: \"wenxin\", version: \"ernie-speed-128k\", pre_method: \"text_baidu\", post_method: \"baidu\" },\n                { type: \"llm\", name: \"ernie-tiny-8k\", series: \"wenxin\", version: \"ernie-tiny-8k\", pre_method: \"text_baidu\", post_method: \"baidu\" },\n                { type: \"llm\", name: \"ernie-lite-8k\", series: \"wenxin\", version: \"ernie-lite-8k\", pre_method: \"text_baidu\", post_method: \"baidu\" },\n                { type: \"llm\", name: \"Yi-34B-Chat\", series: \"yi\", version: \"yi_34b_chat\", pre_method: \"text_baidu\", post_method: \"baidu\" }\n            ]\n        },\n        \"Moonshot_AI\":\n        {\n            platform_name: \"月之暗面\",\n            list: [\n                { type: \"llm\", name: \"moonshot-v1-8k\", series: \"moonshot\", version: \"moonshot-v1-8k\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"moonshot-v1-32k\", series: \"moonshot\", version: \"moonshot-v1-32k\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"moonshot-v1-128k\", series: \"moonshot\", version: \"moonshot-v1-128k\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" }\n            ]\n        },\n        \"Xunfei_Spark\":\n        {\n            platform_name: \"讯飞星火\",\n            list: [\n                { type: \"llm\", name: \"Spark Lite 🆓\", series: \"xunfei\", version: \"spark lite\", pre_method: \"text_xunfei\", post_method: \"add\" }\n            ]\n        },\n        \"Zhipu_BigModel\":\n        {\n            platform_name: \"智谱AI\",\n            list: [\n                { type: \"llm\", name: \"glm-4-flash 🆓\", series: \"zhipu\", version: \"glm-4-flash\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4-0520\", series: \"zhipu\", version: \"glm-4-0520\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4-air\", series: \"zhipu\", version: \"glm-4-air\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4-plus\", series: \"zhipu\", version: \"glm-4-plus\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4-long\", series: \"zhipu\", version: \"glm-4-long\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4-flashx\", series: \"zhipu\", version: \"glm-4-flashx\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4-airx\", series: \"zhipu\", version: \"glm-4-airx\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"llm\", name: \"glm-4\", series: \"zhipu\", version: \"glm-4\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" },\n                { type: \"vim\", name: \"glm-4v\", series: \"zhipu\", version: \"glm-4v\", pre_method: \"img_zhipu\", post_method: \"delta\" },\n                { type: \"igm\", name: \"cogview-3-flash 🆓\", series: \"zhipu\", version: \"cogview-3-flash\", pre_method: \"igm_zhipu\", post_method: \"igm_zhipu\" },\n                { type: \"igm\", name: \"cogview-3\", series: \"zhipu\", version: \"cogview-3\", pre_method: \"igm_zhipu\", post_method: \"igm_zhipu\" },\n                { type: \"igm\", name: \"cogview-3-plus\", series: \"zhipu\", version: \"cogview-3-plus\", pre_method: \"igm_zhipu\", post_method: \"igm_zhipu\" },\n            ]\n        },\n        \"TT_Volcengine\":\n        {\n            platform_name: \"火山方舟\",\n            list: [\n                { type: \"llm\", name: \"deepseek-r1\", series: \"volcengine\", version: \"\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta_reasoning\" }\n            ]\n        },\n        \"Yidong_CMECloud\":\n        {\n            platform_name: \"移动云\",\n            list: [\n                { type: \"llm\", name: \"default\", series: \"default\", version: \"default\", pre_method: \"text_moonshot_zhipu\", post_method: \"delta\" }\n            ]\n        },\n        \"OpenAI\":\n        {\n            platform_name: \"OpenAI\",\n            list: [\n                { type: \"llm\", name: \"llm\", series: \"default\", version: \"llm_default\", pre_method: \"text_moonshot_zhipu\", post_method: \"add\" }\n            ]\n        },\n        \"Local\":\n        {\n            platform_name: \"本地调用\",\n            list: [\n                { type: \"llm\", name: \"对话模型\", series: \"local\", version: \"llm_local\", pre_method: \"local\", post_method: \"llm_local\", can_web_search: true },\n                { type: \"vim\", name: \"图片理解模型\", series: \"local\", version: \"vim_local\", pre_method: \"local\", post_method: \"llm_local\" },\n                { type: \"igm\", name: \"图片生成模型\", series: \"local\", version: \"igm_local\", pre_method: \"local\", post_method: \"igm_zhipu\" },\n            ]\n        }\n    },\n    /**\n     * 前处理(入参)规则处理\n     */\n    preProcess: preProcess,\n    /**\n     * 后处理(出参)规则处理\n     */\n    postProcess: postProcess\n}"],"names":["API_URLS","llm","vim","igm","async","fetchAPI","prompt","history","files","controller","onopen","onmessage","onclose","onerror","setting","store","state","model_config","version","pre_method","type","api_key","api_key_map","platform","url","requestConfig","method","headers","body","JSON","stringify","preProcess","signal","openWhenHidden","fetchEventSource","model_version","is_search","console","log","model","input","messages","buildLlmMessage","parameters","result_format","incremental_output","enable_search","stream","web_search","enable","parameter","chat","domain","temperature","max_tokens","payload","message","text","getLocalHistory","buildAliVLMessage","buildZhipuVLMessage","getHistory","array","i","length","push","query","answer","arr","content","base64","user","assistant","postProcess","e","post_method","parse","data","output","choices","delta","reasoning_content","result","event","error","warn","module","exports","model_list","platform_name","list","name","series","can_web_search","getBytes","onChunk","reader","getReader","read","done","value","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","undefined","concat","bufLength","lineStart","lineEnd","subarray","getMessages","onId","onRetry","onMessage","newMessage","decoder","TextDecoder","line","field","decode","valueOffset","id","retry","parseInt","isNaN","a","b","res","Uint8Array","set","EventStreamContentType","DefaultRetryInterval","LastEventId","_a","inputSignal","inputHeaders","inputOnOpen","fetch","inputFetch","rest","__rest","Promise","resolve","reject","Object","assign","curRequestController","onVisibilityChange","abort","document","hidden","create","accept","addEventListener","retryInterval","retryTimer","dispose","removeEventListener","window","clearTimeout","defaultOnOpen","AbortController","response","err","aborted","interval","setTimeout","innerErr","contentType","get","startsWith","Error"],"sourceRoot":""}