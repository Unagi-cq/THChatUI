{"version":3,"file":"js/870.96464bb1.js","mappings":"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","sources":["webpack://THChatUI/./src/api/SiliconFlow/index.js","webpack://THChatUI/../../src/parse.ts","webpack://THChatUI/../../src/fetch.ts"],"sourcesContent":["/**\n * @fileoverview 硅基流动平台的HTTP调用。\n * 接口采用SSE请求方式，不需要跨域配置\n */\nimport { fetchEventSource } from \"@microsoft/fetch-event-source\";\nimport store from '../../store';\n\n// 定义不同类型模型的请求地址\nconst API_URLS = {\n    llm: \"https://api.siliconflow.com/v1/chat/completions\",\n    vim: \"\", // 预留视觉模型接口\n    igm: \"\" // 预留图生成模型接口\n};\n\n/**\n * 调用硅基流动平台的接口\n * @param {string} prompt - 用户输入的问题\n * @param {Array} history - 历史对话消息\n * @param {Array} files - 文件列表\n * @param {AbortController} controller - 控制请求的取消\n * @param {Function} onopen - 连接成功回调\n * @param {Function} onmessage - 接收消息回调\n * @param {Function} onclose - 连接关闭回调\n * @param {Function} onerror - 错误处理回调\n */\nexport async function fetchAPI({\n    prompt,\n    history,\n    files,\n    controller,\n    onopen,\n    onmessage,\n    onclose,\n    onerror\n}) {\n    const { setting } = store.state;\n    const { model_config } = setting;\n    const { version, type } = model_config;\n    const api_key = setting.model_list[setting.platform].api_key_config.api_key;\n\n    const url = API_URLS[type] || API_URLS.llm;\n    const is_search = false;  \n\n    const requestConfig = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${api_key}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(preProcess(version, prompt, history, type, files, is_search)),\n        signal: controller.signal,\n        onopen,\n        onmessage,\n        onclose,\n        onerror,\n        openWhenHidden: true\n    };\n\n    return await fetchEventSource(url, requestConfig);\n}\n\n/**\n * 构建请求体\n * @param {string} model_version - 模型版本标识\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {string} type - 模型类型标识\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n * @param {boolean} is_search - 是否启用网络搜索功能\n */\nfunction preProcess(model_version, prompt, history, type, files, is_search) {\n    let body = {};\n    switch (type) {\n        // 文本输入格式\n        case \"llm\":\n            body = {\n                model: model_version,\n                messages: buildLLMMessage(prompt, history),\n                stream: true\n            }\n            break;\n    }\n    return body;\n}\n\n/**\n * 构建LLM文本对话消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n */\nfunction buildLLMMessage(prompt, history) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.query\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": chat.answer\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history)\n    arr.push({\n        \"role\": \"user\",\n        \"content\": prompt\n    })\n    return arr;\n}\n\nexport function postProcess(event) {\n    if (event.data === '[DONE]') {\n        return { content: '' };\n    }\n\n    const data = JSON.parse(event.data).choices[0];\n\n    if (data.finish_reason === \"stop\") {\n        return { content: '' };\n    }\n\n    if (data.delta.reasoning_content) {\n        return { reasoning_content: data.delta.reasoning_content };\n    } else {\n        return { content: data.delta.content };\n    }\n}\n"],"names":["API_URLS","llm","vim","igm","async","fetchAPI","prompt","history","files","controller","onopen","onmessage","onclose","onerror","setting","store","state","model_config","version","type","api_key","model_list","platform","api_key_config","url","is_search","requestConfig","method","headers","body","JSON","stringify","preProcess","signal","openWhenHidden","fetchEventSource","model_version","model","messages","buildLLMMessage","stream","getHistory","array","i","length","chat","push","query","answer","arr","postProcess","event","data","content","parse","choices","finish_reason","delta","reasoning_content","getBytes","onChunk","reader","getReader","result","read","done","value","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","undefined","concat","bufLength","lineStart","lineEnd","subarray","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","TextDecoder","line","field","decode","valueOffset","id","retry","parseInt","isNaN","a","b","res","Uint8Array","set","EventStreamContentType","DefaultRetryInterval","LastEventId","input","_a","inputSignal","inputHeaders","inputOnOpen","fetch","inputFetch","rest","__rest","Promise","resolve","reject","Object","assign","curRequestController","onVisibilityChange","abort","document","hidden","create","accept","addEventListener","retryInterval","retryTimer","dispose","removeEventListener","window","clearTimeout","defaultOnOpen","AbortController","response","err","aborted","interval","setTimeout","innerErr","contentType","get","startsWith","Error"],"sourceRoot":""}