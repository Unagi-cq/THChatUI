{"version":3,"file":"js/428.fbd85580.js","mappings":"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","sources":["webpack://THChatUI/../../src/parse.ts","webpack://THChatUI/../../src/fetch.ts","webpack://THChatUI/./src/api/Ali_DashScope/index.js"],"sourcesContent":[null,null,"/**\n * @fileoverview 阿里云平台的HTTP调用。\n * 接口采用SSE请求方式，直接调会跨域，需要配代理，部署在服务器上之后也需要配置代理，详情可以参考本项目的文档\n */\nimport { fetchEventSource } from \"@microsoft/fetch-event-source\";\nimport store from '../../store';\n\n// 阿里云平台的接口地址 在项目内部设置了跨域 所以拼接了字符串\"/ali/remote\" 对应项目里面的代理配置 vue.config.js\nconst API_URLS = {\n    llm: \"/ali/remote/api/v1/services/aigc/text-generation/generation\",\n    vim: \"/ali/remote/api/v1/services/aigc/multimodal-generation/generation\",\n    igm: \"\" // 预留阿里平台的绘图模型\n};\n\n/**\n * 调用阿里云平台的接口\n * @param {string} prompt - 用户输入的问题\n * @param {Array} history - 历史对话消息\n * @param {Array} files - 文件列表 图片\n * @param {AbortController} controller - 控制请求的取消\n * @param {Function} onopen - 连接成功回调\n * @param {Function} onmessage - 接收消息回调\n * @param {Function} onclose - 连接关闭回调\n * @param {Function} onerror - 错误处理回调\n */\nexport async function fetchAPI({\n    prompt,\n    history,\n    files,\n    controller,\n    onopen,\n    onmessage,\n    onclose,\n    onerror\n}) {\n    const { setting } = store.state;\n    const { model_config, web_search_enabled } = setting;\n    const { version, type, can_web_search } = model_config;\n    const api_key = setting.model_list[setting.platform].api_key_config.api_key;\n\n    const url = API_URLS[type] || API_URLS.llm;\n    const is_search = (can_web_search !== undefined && can_web_search) && web_search_enabled;\n\n    const requestConfig = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${api_key}`,\n            'Content-Type': 'application/json',\n            'Accept': 'text/event-stream',\n            'X-DashScope-SSE': 'enable'\n        },\n        body: JSON.stringify(preProcess(version, prompt, history, type, files, is_search)),\n        signal: controller.signal,\n        onopen,\n        onmessage,\n        onclose,\n        onerror,\n        openWhenHidden: true\n    };\n\n    return await fetchEventSource(url, requestConfig);\n}\n\n/**\n * 构建请求体\n * @param {string} model_version - 模型版本标识\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {string} type - 模型类型标识\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n * @param {boolean} is_search - 是否启用网络搜索功能\n */\nfunction preProcess(model_version, prompt, history, type, files, is_search) {\n    let body = {};\n    switch (type) {\n        // 文本输入格式\n        case \"llm\":\n            body = {\n                model: model_version,\n                input: {\n                    messages: buildLLMMessage(prompt, history)\n                },\n                parameters: {\n                    result_format: \"message\",\n                    incremental_output: true\n                }\n            }\n            if (is_search) {\n                body.parameters.enable_search = true;\n            }\n            break;\n        // 图片输入格式\n        case \"vim\":\n            body = {\n                model: model_version,\n                input: {\n                    messages: buildVIMMessage(prompt, history, files)\n                },\n                parameters: {\n                    result_format: \"message\",\n                    incremental_output: true\n                }\n            }\n            break;\n    }\n    return body;\n}\n\n/**\n * 构建LLM文本对话消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n */\nfunction buildLLMMessage(prompt, history) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.query\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": chat.answer\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history)\n    arr.push({\n        \"role\": \"user\",\n        \"content\": prompt\n    })\n    return arr;\n}\n\n\n/**\n * 构建多模态消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n */\nfunction buildVIMMessage(prompt, history, files) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.files && chat.files[0] && chat.files[0].base64 ? \n                    [{\"image\": chat.files[0].base64}, { \"text\": chat.query }] :\n                    [{ \"text\": chat.query }]\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": [{ \"text\": chat.answer }]\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history);\n    let content = [];\n\n    if (files && files.length > 0 && files[0].base64) {\n        content.push({\n            \"image\": files[0].base64\n        });\n    }\n\n    content.push({\n        \"text\": prompt\n    });\n\n    arr.push({\n        \"role\": \"user\",\n        \"content\": content\n    });\n\n    return arr;\n}\n\nexport function postProcess(event) {\n    var data = JSON.parse(event.data).output.choices[0];\n\n    if (data.finish_reason === \"stop\") {\n        return { usage: data.usage };\n    }\n\n    data = data.message;\n\n    if (data.reasoning_content) {\n        return { reasoning_content: data.reasoning_content };\n    } else {\n        if (typeof data.content === 'string') {\n            return { content: data.content };\n        } else {\n            return { content: data.content[0].text };\n        }\n    }\n}\n"],"names":["getBytes","stream","onChunk","reader","getReader","result","read","done","value","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","arr","undefined","concat","bufLength","length","lineStart","lineEnd","subarray","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","TextDecoder","line","field","decode","valueOffset","data","event","id","retry","parseInt","isNaN","a","b","res","Uint8Array","set","EventStreamContentType","DefaultRetryInterval","LastEventId","fetchEventSource","input","_a","signal","inputSignal","headers","inputHeaders","onopen","inputOnOpen","onmessage","onclose","onerror","openWhenHidden","fetch","inputFetch","rest","__rest","Promise","resolve","reject","Object","assign","curRequestController","onVisibilityChange","abort","document","hidden","create","accept","addEventListener","retryInterval","retryTimer","dispose","removeEventListener","window","clearTimeout","defaultOnOpen","AbortController","response","body","err","aborted","interval","setTimeout","innerErr","contentType","get","startsWith","Error","API_URLS","llm","vim","igm","async","fetchAPI","prompt","history","files","controller","setting","store","state","model_config","web_search_enabled","version","type","can_web_search","api_key","model_list","platform","api_key_config","url","is_search","requestConfig","method","JSON","stringify","preProcess","model_version","model","messages","buildLLMMessage","parameters","result_format","incremental_output","enable_search","buildVIMMessage","getHistory","array","i","chat","push","query","answer","base64","content","postProcess","parse","output","choices","finish_reason","usage","reasoning_content","text"],"sourceRoot":""}