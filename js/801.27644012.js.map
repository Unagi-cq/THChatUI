{"version":3,"file":"js/801.27644012.js","mappings":"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","sources":["webpack://THChatUI/./src/api/Zhipu_BigModel/index.js","webpack://THChatUI/../../src/parse.ts","webpack://THChatUI/../../src/fetch.ts"],"sourcesContent":["/**\n * @fileoverview 智谱AI平台的HTTP调用。\n * 语言模型和图片理解接口采用SSE请求方式，不需要跨域配置\n * 图片生成模型采用普通的fetch请求\n */\nimport { fetchEventSource } from \"@microsoft/fetch-event-source\";\nimport store from '../../store';\n\n// 定义不同类型模型的请求地址\nconst API_URLS = {\n    llm: \"https://open.bigmodel.cn/api/paas/v4/chat/completions\",\n    vim: \"https://open.bigmodel.cn/api/paas/v4/chat/completions\", // 图片理解模型接口\n    igm: \"https://open.bigmodel.cn/api/paas/v4/images/generations\" // 图生成模型接口\n};\n\n/**\n * 调用智谱AI平台的接口\n * @param {string} prompt - 用户输入的问题\n * @param {Array} history - 历史对话消息\n * @param {Array} files - 文件列表\n * @param {AbortController} controller - 控制请求的取消\n * @param {Function} onopen - 连接成功回调\n * @param {Function} onmessage - 接收消息回调\n * @param {Function} onclose - 连接关闭回调\n * @param {Function} onerror - 错误处理回调\n */\nexport async function fetchAPI({\n    prompt,\n    history,\n    files,\n    controller,\n    onopen,\n    onmessage,\n    onclose,\n    onerror\n}) {\n    const { setting } = store.state;\n    const { model_config } = setting;\n    const { version, type } = model_config;\n    const api_key = setting.model_list[setting.platform].api_key_config.api_key;\n\n    const url = API_URLS[type] || API_URLS.llm;\n\n    // 如果是图片生成接口，使用普通的fetch请求\n    if (type === 'igm') {\n        onopen({ status: 200 });\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Authorization\": `Bearer ${api_key}`,\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(preProcess(version, prompt, history, type, files, false)),\n            });\n            const data = await response.json();\n            onmessage(data);\n            onclose();\n            return;\n        } catch (error) {\n            onerror(error);\n            return;\n        }\n    }\n\n    // 对于LLM和VIM接口使用SSE\n    const requestConfig = {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": `Bearer ${api_key}`,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(preProcess(version, prompt, history, type, files, false)),\n        signal: controller.signal,\n        onopen,\n        onmessage,\n        onclose,\n        onerror,\n        openWhenHidden: true\n    };\n\n    return await fetchEventSource(url, requestConfig);\n}\n\n/**\n * 构建请求体\n * @param {string} model_version - 模型版本标识\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {string} type - 模型类型标识\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n * @param {boolean} is_search - 是否启用网络搜索功能\n */\nfunction preProcess(model_version, prompt, history, type, files, is_search) {\n    let body = {};\n    switch (type) {\n        // 文本输入格式\n        case \"llm\":\n            body = {\n                model: model_version,\n                messages: buildLLMMessage(prompt, history),\n                stream: true\n            }\n            break;\n        // 图片输入格式\n        case \"vim\":\n            body = {\n                model: model_version,\n                messages: buildVIMMessage(prompt, history, files),\n                stream: true\n            }\n            break;\n        // 图片生成格式\n        case \"igm\":\n            body = {\n                model: model_version,\n                prompt: prompt\n            }\n            break;\n    }\n    return body;\n}\n\n/**\n * 构建LLM文本对话消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n */\nfunction buildLLMMessage(prompt, history) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": chat.query\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": chat.answer\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history)\n    arr.push({\n        \"role\": \"user\",\n        \"content\": prompt\n    })\n    return arr;\n}\n\n/**\n * 构建智谱AI平台的多模态消息\n * @param {string} prompt - 用户当前的输入内容\n * @param {Array} history - 历史对话记录数组\n * @param {Array} files - 上传的文件数组，主要包含图片的base64数据\n */\nfunction buildVIMMessage(prompt, history, files) {\n    function getHistory(history) {\n        const array = [];\n        // 排除最后一条 history，因为是本次刚发的消息\n        for (let i = 0; i < history.length - 1; i++) {\n            const chat = history[i];\n            array.push({\n                \"role\": \"user\",\n                \"content\": [{ \"type\": \"text\", \"text\": chat.query }]\n            });\n            array.push({\n                \"role\": \"assistant\",\n                \"content\": [{ \"type\": \"text\", \"text\": chat.answer }]\n            });\n        }\n        return array;\n    }\n    let arr = getHistory(history);\n    let content = [];\n\n    if (files && files.length > 0 && files[0].base64) {\n        content.push({\n            \"type\": \"image_url\",\n            \"image_url\": {\n                \"url\": files[0].base64\n            }\n        });\n    }\n\n    content.push({\n        \"type\": \"text\",\n        \"text\": prompt\n    });\n\n    arr.push({\n        \"role\": \"user\",\n        \"content\": content\n    });\n\n    return arr;\n}\n\nexport function postProcess(event) {\n    // fetch 图片链接返回\n    if (event.data[0].url) {\n        return { content: event.data[0].url }\n    }\n\n    // stream 流式返回\n    if (event.data === '[DONE]') {\n        return { content: '' };\n    }\n\n    const data = JSON.parse(event.data).choices[0];\n\n    if (data.finish_reason === \"stop\") {\n        return { content: '' };\n    }\n\n    if (data.delta.reasoning_content) {\n        return { reasoning_content: data.delta.reasoning_content };\n    } else {\n        return { content: data.delta.content };\n    }\n}\n"],"names":["API_URLS","llm","vim","igm","async","fetchAPI","prompt","history","files","controller","onopen","onmessage","onclose","onerror","setting","store","state","model_config","version","type","api_key","model_list","platform","api_key_config","url","status","response","fetch","method","headers","body","JSON","stringify","preProcess","data","json","error","requestConfig","signal","openWhenHidden","fetchEventSource","model_version","is_search","model","messages","buildLLMMessage","stream","buildVIMMessage","getHistory","array","i","length","chat","push","query","answer","arr","content","base64","postProcess","event","parse","choices","finish_reason","delta","reasoning_content","getBytes","onChunk","reader","getReader","result","read","done","value","getLines","onLine","buffer","position","fieldLength","discardTrailingNewline","undefined","concat","bufLength","lineStart","lineEnd","subarray","getMessages","onId","onRetry","onMessage","message","newMessage","decoder","TextDecoder","line","field","decode","valueOffset","id","retry","parseInt","isNaN","a","b","res","Uint8Array","set","EventStreamContentType","DefaultRetryInterval","LastEventId","input","_a","inputSignal","inputHeaders","inputOnOpen","inputFetch","rest","__rest","Promise","resolve","reject","Object","assign","curRequestController","onVisibilityChange","abort","document","hidden","create","accept","addEventListener","retryInterval","retryTimer","dispose","removeEventListener","window","clearTimeout","defaultOnOpen","AbortController","err","aborted","interval","setTimeout","innerErr","contentType","get","startsWith","Error"],"sourceRoot":""}